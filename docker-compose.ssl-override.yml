# Docker Compose Override for SSL/TLS Integration
# Use this to extend your main docker-compose.production-secure.yml with SSL features

version: '3.8'

services:
  nginx:
    volumes:
      # SSL certificates and configuration
      - ./ssl/certbot/conf:/etc/letsencrypt:ro
      - ./ssl/certbot/www:/var/www/certbot:ro
      - ./nginx/nginx.ssl.conf:/etc/nginx/nginx.conf:ro
      - ./ssl/dhparam:/etc/nginx/ssl:ro
    ports:
      - "443:443"  # HTTPS port
    environment:
      - DOMAIN=${DOMAIN}
      - ENABLE_SSL=${ENABLE_SSL:-true}
    depends_on:
      - certbot
      - gameforge-api
    command: >
      sh -c "
        # Wait for certificates to be available
        while [ ! -f /etc/letsencrypt/live/${DOMAIN}/fullchain.pem ]; do
          echo 'Waiting for SSL certificates...';
          sleep 5;
        done;
        # Start nginx
        nginx -g 'daemon off;'
      "

  certbot:
    image: certbot/certbot:latest
    container_name: gameforge-certbot
    volumes:
      - ./ssl/certbot/conf:/etc/letsencrypt
      - ./ssl/certbot/www:/var/www/certbot
    environment:
      - CERTBOT_EMAIL=${CERTBOT_EMAIL}
      - DOMAIN=${DOMAIN}
    command: >
      sh -c "
        # Initial certificate generation if not exists
        if [ ! -f /etc/letsencrypt/live/${DOMAIN}/fullchain.pem ]; then
          certbot certonly --webroot -w /var/www/certbot 
            --email ${CERTBOT_EMAIL} --agree-tos --no-eff-email
            -d ${DOMAIN} -d www.${DOMAIN} -d api.${DOMAIN};
        fi;
        # Keep running for renewal
        trap exit TERM; 
        while :; do 
          certbot renew --webroot -w /var/www/certbot; 
          sleep 12h & wait; 
        done;
      "
    networks:
      - gameforge-network
    restart: unless-stopped

  ssl-monitor:
    build:
      context: .
      dockerfile: ssl/Dockerfile.cert-renewal
    container_name: gameforge-ssl-monitor
    volumes:
      - ./ssl/certbot/conf:/etc/letsencrypt:ro
      - ./ssl/monitoring:/monitoring
      - ./ssl/scripts:/scripts:ro
    environment:
      - DOMAIN=${DOMAIN}
      - PROMETHEUS_PUSHGATEWAY=http://prometheus-pushgateway:9091
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL:-}
    networks:
      - gameforge-network
    restart: unless-stopped
    command: >
      sh -c "
        # Setup monitoring cron
        echo '0 */6 * * * /scripts/health-check-certs.sh' | crontab -;
        echo '0 2 * * * /scripts/ssl-metrics.sh' | crontab -;
        # Start cron daemon
        crond -f -l 2;
      "

  prometheus-pushgateway:
    image: prom/pushgateway:latest
    container_name: gameforge-pushgateway
    ports:
      - "9091:9091"
    networks:
      - gameforge-network
    restart: unless-stopped
    command:
      - '--web.enable-lifecycle'
      - '--push.disable-consistency-check'

volumes:
  ssl_certificates:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /etc/letsencrypt

networks:
  gameforge-network:
    external: true
