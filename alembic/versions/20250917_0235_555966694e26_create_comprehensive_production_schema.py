"""Create comprehensive production schema

Revision ID: 555966694e26
Revises: 
Create Date: 2025-09-17 02:35:07.030953

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '555966694e26'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    """Upgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('game_templates',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('slug', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('summary', sa.String(length=500), nullable=True),
    sa.Column('engine', sa.Enum('UNITY', 'UNREAL', 'GODOT', 'CUSTOM', 'WEB', name='gameengine'), nullable=False),
    sa.Column('genre', sa.Enum('ACTION', 'ADVENTURE', 'RPG', 'STRATEGY', 'SIMULATION', 'PUZZLE', 'PLATFORMER', 'RACING', 'SPORTS', 'HORROR', 'CASUAL', 'EDUCATIONAL', name='gamegenre'), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('features', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('target_platforms', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('thumbnail_url', sa.String(length=500), nullable=True),
    sa.Column('preview_images', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('demo_url', sa.String(length=500), nullable=True),
    sa.Column('repository_url', sa.String(length=500), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_featured', sa.Boolean(), nullable=True),
    sa.Column('is_premium', sa.Boolean(), nullable=True),
    sa.Column('author_name', sa.String(length=100), nullable=True),
    sa.Column('author_url', sa.String(length=500), nullable=True),
    sa.Column('license', sa.String(length=50), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('rating_average', sa.Float(), nullable=True),
    sa.Column('rating_count', sa.Integer(), nullable=True),
    sa.Column('template_config', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_game_templates'))
    )
    op.create_index('idx_game_templates_active', 'game_templates', ['is_active'], unique=False)
    op.create_index('idx_game_templates_category', 'game_templates', ['category'], unique=False)
    op.create_index('idx_game_templates_engine', 'game_templates', ['engine'], unique=False)
    op.create_index('idx_game_templates_featured', 'game_templates', ['is_featured'], unique=False)
    op.create_index('idx_game_templates_genre', 'game_templates', ['genre'], unique=False)
    op.create_index('idx_game_templates_slug', 'game_templates', ['slug'], unique=False)
    op.create_index('idx_game_templates_tags', 'game_templates', ['tags'], unique=False)
    op.create_index(op.f('ix_game_templates_category'), 'game_templates', ['category'], unique=False)
    op.create_index(op.f('ix_game_templates_engine'), 'game_templates', ['engine'], unique=False)
    op.create_index(op.f('ix_game_templates_genre'), 'game_templates', ['genre'], unique=False)
    op.create_index(op.f('ix_game_templates_is_active'), 'game_templates', ['is_active'], unique=False)
    op.create_index(op.f('ix_game_templates_is_featured'), 'game_templates', ['is_featured'], unique=False)
    op.create_index(op.f('ix_game_templates_is_premium'), 'game_templates', ['is_premium'], unique=False)
    op.create_index(op.f('ix_game_templates_name'), 'game_templates', ['name'], unique=False)
    op.create_index(op.f('ix_game_templates_slug'), 'game_templates', ['slug'], unique=True)
    op.create_index(op.f('ix_game_templates_tags'), 'game_templates', ['tags'], unique=False)
    op.create_table('storage_configs',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('provider', sa.Enum('LOCAL', 'AWS_S3', 'GOOGLE_CLOUD', 'AZURE_BLOB', 'CLOUDFLARE_R2', name='storageprovider'), nullable=False),
    sa.Column('region', sa.String(length=50), nullable=True),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.Column('credentials', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('storage_limit_bytes', sa.Integer(), nullable=True),
    sa.Column('storage_used_bytes', sa.Integer(), nullable=True),
    sa.Column('upload_speed_mbps', sa.Float(), nullable=True),
    sa.Column('download_speed_mbps', sa.Float(), nullable=True),
    sa.Column('availability_percentage', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_tested_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_storage_configs'))
    )
    op.create_index('idx_storage_configs_active', 'storage_configs', ['is_active'], unique=False)
    op.create_index('idx_storage_configs_default', 'storage_configs', ['is_default'], unique=False)
    op.create_index('idx_storage_configs_provider', 'storage_configs', ['provider'], unique=False)
    op.create_index(op.f('ix_storage_configs_is_active'), 'storage_configs', ['is_active'], unique=False)
    op.create_index(op.f('ix_storage_configs_is_default'), 'storage_configs', ['is_default'], unique=False)
    op.create_index(op.f('ix_storage_configs_name'), 'storage_configs', ['name'], unique=False)
    op.create_index(op.f('ix_storage_configs_provider'), 'storage_configs', ['provider'], unique=False)
    op.create_table('system_config',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('key', sa.String(length=100), nullable=False),
    sa.Column('value', sa.Text(), nullable=True),
    sa.Column('value_type', sa.String(length=20), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('default_value', sa.Text(), nullable=True),
    sa.Column('validation_rules', sa.JSON(), nullable=True),
    sa.Column('is_sensitive', sa.Boolean(), nullable=True),
    sa.Column('requires_restart', sa.Boolean(), nullable=True),
    sa.Column('environment', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_system_config'))
    )
    op.create_index('idx_system_config_category', 'system_config', ['category'], unique=False)
    op.create_index('idx_system_config_environment', 'system_config', ['environment'], unique=False)
    op.create_index('idx_system_config_key', 'system_config', ['key'], unique=False)
    op.create_index(op.f('ix_system_config_category'), 'system_config', ['category'], unique=False)
    op.create_index(op.f('ix_system_config_environment'), 'system_config', ['environment'], unique=False)
    op.create_index(op.f('ix_system_config_is_sensitive'), 'system_config', ['is_sensitive'], unique=False)
    op.create_index(op.f('ix_system_config_key'), 'system_config', ['key'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('website', sa.String(length=200), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('role', sa.Enum('ADMIN', 'USER', 'MODERATOR', 'DEVELOPER', name='userrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('provider', sa.Enum('LOCAL', 'GITHUB', 'GOOGLE', 'DISCORD', name='authprovider'), nullable=True),
    sa.Column('provider_id', sa.String(length=100), nullable=True),
    sa.Column('github_id', sa.String(length=100), nullable=True),
    sa.Column('google_id', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('email_verified_at', sa.DateTime(), nullable=True),
    sa.Column('api_requests_count', sa.Integer(), nullable=True),
    sa.Column('api_requests_limit', sa.Integer(), nullable=True),
    sa.Column('storage_used_bytes', sa.Integer(), nullable=True),
    sa.Column('storage_limit_bytes', sa.Integer(), nullable=True),
    sa.Column('profile_visibility', sa.String(length=20), nullable=True),
    sa.Column('email_notifications', sa.Boolean(), nullable=True),
    sa.Column('marketing_emails', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_index('idx_users_created_at', 'users', ['created_at'], unique=False)
    op.create_index('idx_users_email', 'users', ['email'], unique=False)
    op.create_index('idx_users_github_id', 'users', ['github_id'], unique=False)
    op.create_index('idx_users_provider', 'users', ['provider'], unique=False)
    op.create_index('idx_users_provider_id', 'users', ['provider_id'], unique=False)
    op.create_index('idx_users_role', 'users', ['role'], unique=False)
    op.create_index('idx_users_username', 'users', ['username'], unique=False)
    op.create_index(op.f('ix_users_created_at'), 'users', ['created_at'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_github_id'), 'users', ['github_id'], unique=True)
    op.create_index(op.f('ix_users_google_id'), 'users', ['google_id'], unique=True)
    op.create_index(op.f('ix_users_is_active'), 'users', ['is_active'], unique=False)
    op.create_index(op.f('ix_users_is_admin'), 'users', ['is_admin'], unique=False)
    op.create_index(op.f('ix_users_is_verified'), 'users', ['is_verified'], unique=False)
    op.create_index(op.f('ix_users_provider'), 'users', ['provider'], unique=False)
    op.create_index(op.f('ix_users_provider_id'), 'users', ['provider_id'], unique=False)
    op.create_index(op.f('ix_users_role'), 'users', ['role'], unique=False)
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('access_tokens',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('token_hash', sa.String(length=255), nullable=False),
    sa.Column('token_type', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('scopes', sa.JSON(), nullable=True),
    sa.Column('resource_type', sa.String(length=50), nullable=True),
    sa.Column('resource_id', sa.String(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_access_tokens_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_access_tokens'))
    )
    op.create_index('idx_access_tokens_expires', 'access_tokens', ['expires_at'], unique=False)
    op.create_index('idx_access_tokens_hash', 'access_tokens', ['token_hash'], unique=False)
    op.create_index('idx_access_tokens_resource', 'access_tokens', ['resource_type', 'resource_id'], unique=False)
    op.create_index('idx_access_tokens_user_id', 'access_tokens', ['user_id'], unique=False)
    op.create_index(op.f('ix_access_tokens_expires_at'), 'access_tokens', ['expires_at'], unique=False)
    op.create_index(op.f('ix_access_tokens_is_active'), 'access_tokens', ['is_active'], unique=False)
    op.create_index(op.f('ix_access_tokens_resource_id'), 'access_tokens', ['resource_id'], unique=False)
    op.create_index(op.f('ix_access_tokens_resource_type'), 'access_tokens', ['resource_type'], unique=False)
    op.create_index(op.f('ix_access_tokens_token_hash'), 'access_tokens', ['token_hash'], unique=True)
    op.create_index(op.f('ix_access_tokens_user_id'), 'access_tokens', ['user_id'], unique=False)
    op.create_table('api_keys',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('key_hash', sa.String(length=255), nullable=False),
    sa.Column('scopes', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('permissions', sa.JSON(), nullable=True),
    sa.Column('rate_limit_per_minute', sa.Integer(), nullable=True),
    sa.Column('rate_limit_per_hour', sa.Integer(), nullable=True),
    sa.Column('rate_limit_per_day', sa.Integer(), nullable=True),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('last_used_ip', postgresql.INET(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('allowed_ips', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('allowed_domains', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_api_keys_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_api_keys'))
    )
    op.create_index('idx_api_keys_active', 'api_keys', ['is_active'], unique=False)
    op.create_index('idx_api_keys_expires', 'api_keys', ['expires_at'], unique=False)
    op.create_index('idx_api_keys_hash', 'api_keys', ['key_hash'], unique=False)
    op.create_index('idx_api_keys_user_id', 'api_keys', ['user_id'], unique=False)
    op.create_index(op.f('ix_api_keys_expires_at'), 'api_keys', ['expires_at'], unique=False)
    op.create_index(op.f('ix_api_keys_is_active'), 'api_keys', ['is_active'], unique=False)
    op.create_index(op.f('ix_api_keys_key_hash'), 'api_keys', ['key_hash'], unique=True)
    op.create_index(op.f('ix_api_keys_user_id'), 'api_keys', ['user_id'], unique=False)
    op.create_table('audit_logs',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('action', sa.Enum('CREATE', 'READ', 'UPDATE', 'DELETE', 'LOGIN', 'LOGOUT', 'EXPORT', 'IMPORT', 'SHARE', 'DOWNLOAD', 'UPLOAD', name='auditaction'), nullable=False),
    sa.Column('resource_type', sa.Enum('USER', 'PROJECT', 'ASSET', 'AI_REQUEST', 'ML_MODEL', 'DATASET', 'API_KEY', 'SYSTEM_CONFIG', name='resourcetype'), nullable=False),
    sa.Column('resource_id', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('ip_address', postgresql.INET(), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('session_id', sa.String(), nullable=True),
    sa.Column('request_id', sa.String(), nullable=True),
    sa.Column('severity', sa.String(length=20), nullable=True),
    sa.Column('risk_level', sa.String(length=20), nullable=True),
    sa.Column('data_classification', sa.String(length=50), nullable=True),
    sa.Column('contains_pii', sa.Boolean(), nullable=True),
    sa.Column('country', sa.String(length=2), nullable=True),
    sa.Column('region', sa.String(length=50), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_audit_logs_user_id_users'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_audit_logs'))
    )
    op.create_index('idx_audit_logs_action', 'audit_logs', ['action'], unique=False)
    op.create_index('idx_audit_logs_ip_address', 'audit_logs', ['ip_address'], unique=False)
    op.create_index('idx_audit_logs_resource_type', 'audit_logs', ['resource_type'], unique=False)
    op.create_index('idx_audit_logs_severity', 'audit_logs', ['severity'], unique=False)
    op.create_index('idx_audit_logs_timestamp', 'audit_logs', ['timestamp'], unique=False)
    op.create_index('idx_audit_logs_user_id', 'audit_logs', ['user_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_action'), 'audit_logs', ['action'], unique=False)
    op.create_index(op.f('ix_audit_logs_contains_pii'), 'audit_logs', ['contains_pii'], unique=False)
    op.create_index(op.f('ix_audit_logs_data_classification'), 'audit_logs', ['data_classification'], unique=False)
    op.create_index(op.f('ix_audit_logs_ip_address'), 'audit_logs', ['ip_address'], unique=False)
    op.create_index(op.f('ix_audit_logs_request_id'), 'audit_logs', ['request_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_resource_id'), 'audit_logs', ['resource_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_resource_type'), 'audit_logs', ['resource_type'], unique=False)
    op.create_index(op.f('ix_audit_logs_risk_level'), 'audit_logs', ['risk_level'], unique=False)
    op.create_index(op.f('ix_audit_logs_session_id'), 'audit_logs', ['session_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_severity'), 'audit_logs', ['severity'], unique=False)
    op.create_index(op.f('ix_audit_logs_timestamp'), 'audit_logs', ['timestamp'], unique=False)
    op.create_index(op.f('ix_audit_logs_user_id'), 'audit_logs', ['user_id'], unique=False)
    op.create_table('presigned_urls',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('url', sa.Text(), nullable=False),
    sa.Column('url_hash', sa.String(length=64), nullable=False),
    sa.Column('resource_type', sa.String(length=50), nullable=False),
    sa.Column('resource_id', sa.String(), nullable=False),
    sa.Column('file_path', sa.String(length=1000), nullable=False),
    sa.Column('allowed_operations', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('allowed_ips', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('max_uses', sa.Integer(), nullable=True),
    sa.Column('use_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_presigned_urls_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_presigned_urls'))
    )
    op.create_index('idx_presigned_urls_expires', 'presigned_urls', ['expires_at'], unique=False)
    op.create_index('idx_presigned_urls_resource', 'presigned_urls', ['resource_type', 'resource_id'], unique=False)
    op.create_index('idx_presigned_urls_user_id', 'presigned_urls', ['user_id'], unique=False)
    op.create_index(op.f('ix_presigned_urls_expires_at'), 'presigned_urls', ['expires_at'], unique=False)
    op.create_index(op.f('ix_presigned_urls_resource_id'), 'presigned_urls', ['resource_id'], unique=False)
    op.create_index(op.f('ix_presigned_urls_url_hash'), 'presigned_urls', ['url_hash'], unique=True)
    op.create_index(op.f('ix_presigned_urls_user_id'), 'presigned_urls', ['user_id'], unique=False)
    op.create_table('projects',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('slug', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('summary', sa.String(length=500), nullable=True),
    sa.Column('engine', sa.Enum('UNITY', 'UNREAL', 'GODOT', 'CUSTOM', 'WEB', name='gameengine'), nullable=True),
    sa.Column('genre', sa.Enum('ACTION', 'ADVENTURE', 'RPG', 'STRATEGY', 'SIMULATION', 'PUZZLE', 'PLATFORMER', 'RACING', 'SPORTS', 'HORROR', 'CASUAL', 'EDUCATIONAL', name='gamegenre'), nullable=True),
    sa.Column('target_platforms', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'ACTIVE', 'PAUSED', 'COMPLETED', 'ARCHIVED', name='projectstatus'), nullable=True),
    sa.Column('visibility', sa.Enum('PRIVATE', 'PUBLIC', 'UNLISTED', name='projectvisibility'), nullable=True),
    sa.Column('is_featured', sa.Boolean(), nullable=True),
    sa.Column('is_template', sa.Boolean(), nullable=True),
    sa.Column('owner_id', sa.String(), nullable=False),
    sa.Column('template_id', sa.String(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('version', sa.String(length=20), nullable=True),
    sa.Column('license', sa.String(length=50), nullable=True),
    sa.Column('repository_url', sa.String(length=500), nullable=True),
    sa.Column('demo_url', sa.String(length=500), nullable=True),
    sa.Column('download_url', sa.String(length=500), nullable=True),
    sa.Column('thumbnail_url', sa.String(length=500), nullable=True),
    sa.Column('view_count', sa.Integer(), nullable=True),
    sa.Column('download_count', sa.Integer(), nullable=True),
    sa.Column('like_count', sa.Integer(), nullable=True),
    sa.Column('fork_count', sa.Integer(), nullable=True),
    sa.Column('storage_used_bytes', sa.Integer(), nullable=True),
    sa.Column('storage_limit_bytes', sa.Integer(), nullable=True),
    sa.Column('asset_count', sa.Integer(), nullable=True),
    sa.Column('ai_generated_content', sa.Boolean(), nullable=True),
    sa.Column('automation_enabled', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('published_at', sa.DateTime(), nullable=True),
    sa.Column('archived_at', sa.DateTime(), nullable=True),
    sa.Column('search_vector', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name=op.f('fk_projects_owner_id_users'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['template_id'], ['game_templates.id'], name=op.f('fk_projects_template_id_game_templates')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_projects'))
    )
    op.create_index('idx_projects_created_at', 'projects', ['created_at'], unique=False)
    op.create_index('idx_projects_engine', 'projects', ['engine'], unique=False)
    op.create_index('idx_projects_genre', 'projects', ['genre'], unique=False)
    op.create_index('idx_projects_owner_id', 'projects', ['owner_id'], unique=False)
    op.create_index('idx_projects_search', 'projects', ['search_vector'], unique=False)
    op.create_index('idx_projects_slug', 'projects', ['slug'], unique=False)
    op.create_index('idx_projects_status', 'projects', ['status'], unique=False)
    op.create_index('idx_projects_tags', 'projects', ['tags'], unique=False)
    op.create_index('idx_projects_target_platforms', 'projects', ['target_platforms'], unique=False)
    op.create_index('idx_projects_template_id', 'projects', ['template_id'], unique=False)
    op.create_index('idx_projects_visibility', 'projects', ['visibility'], unique=False)
    op.create_index(op.f('ix_projects_ai_generated_content'), 'projects', ['ai_generated_content'], unique=False)
    op.create_index(op.f('ix_projects_created_at'), 'projects', ['created_at'], unique=False)
    op.create_index(op.f('ix_projects_engine'), 'projects', ['engine'], unique=False)
    op.create_index(op.f('ix_projects_genre'), 'projects', ['genre'], unique=False)
    op.create_index(op.f('ix_projects_is_featured'), 'projects', ['is_featured'], unique=False)
    op.create_index(op.f('ix_projects_is_template'), 'projects', ['is_template'], unique=False)
    op.create_index(op.f('ix_projects_name'), 'projects', ['name'], unique=False)
    op.create_index(op.f('ix_projects_owner_id'), 'projects', ['owner_id'], unique=False)
    op.create_index(op.f('ix_projects_slug'), 'projects', ['slug'], unique=True)
    op.create_index(op.f('ix_projects_status'), 'projects', ['status'], unique=False)
    op.create_index(op.f('ix_projects_tags'), 'projects', ['tags'], unique=False)
    op.create_index(op.f('ix_projects_template_id'), 'projects', ['template_id'], unique=False)
    op.create_index(op.f('ix_projects_visibility'), 'projects', ['visibility'], unique=False)
    op.create_table('usage_metrics',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('metric_type', sa.String(length=100), nullable=False),
    sa.Column('metric_name', sa.String(length=100), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=20), nullable=True),
    sa.Column('dimensions', sa.JSON(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('period', sa.String(length=20), nullable=True),
    sa.Column('period_start', sa.DateTime(), nullable=True),
    sa.Column('period_end', sa.DateTime(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_usage_metrics_user_id_users'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_usage_metrics'))
    )
    op.create_index('idx_usage_metrics_name', 'usage_metrics', ['metric_name'], unique=False)
    op.create_index('idx_usage_metrics_period', 'usage_metrics', ['period', 'period_start'], unique=False)
    op.create_index('idx_usage_metrics_timestamp', 'usage_metrics', ['timestamp'], unique=False)
    op.create_index('idx_usage_metrics_type', 'usage_metrics', ['metric_type'], unique=False)
    op.create_index('idx_usage_metrics_user_id', 'usage_metrics', ['user_id'], unique=False)
    op.create_index(op.f('ix_usage_metrics_metric_name'), 'usage_metrics', ['metric_name'], unique=False)
    op.create_index(op.f('ix_usage_metrics_metric_type'), 'usage_metrics', ['metric_type'], unique=False)
    op.create_index(op.f('ix_usage_metrics_period'), 'usage_metrics', ['period'], unique=False)
    op.create_index(op.f('ix_usage_metrics_period_end'), 'usage_metrics', ['period_end'], unique=False)
    op.create_index(op.f('ix_usage_metrics_period_start'), 'usage_metrics', ['period_start'], unique=False)
    op.create_index(op.f('ix_usage_metrics_timestamp'), 'usage_metrics', ['timestamp'], unique=False)
    op.create_index(op.f('ix_usage_metrics_user_id'), 'usage_metrics', ['user_id'], unique=False)
    op.create_table('user_consents',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('consent_type', sa.String(length=100), nullable=False),
    sa.Column('granted', sa.Boolean(), nullable=False),
    sa.Column('version', sa.String(length=20), nullable=False),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('withdrawn_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_consents_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_consents'))
    )
    op.create_index('idx_user_consents_created', 'user_consents', ['created_at'], unique=False)
    op.create_index('idx_user_consents_granted', 'user_consents', ['granted'], unique=False)
    op.create_index('idx_user_consents_type', 'user_consents', ['consent_type'], unique=False)
    op.create_index('idx_user_consents_user_id', 'user_consents', ['user_id'], unique=False)
    op.create_index(op.f('ix_user_consents_consent_type'), 'user_consents', ['consent_type'], unique=False)
    op.create_index(op.f('ix_user_consents_created_at'), 'user_consents', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_consents_user_id'), 'user_consents', ['user_id'], unique=False)
    op.create_table('user_permissions',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('permission', sa.Enum('READ', 'WRITE', 'DELETE', 'ADMIN', 'SHARE', 'EXECUTE', name='permissiontype'), nullable=False),
    sa.Column('resource_type', sa.Enum('USER', 'PROJECT', 'ASSET', 'AI_REQUEST', 'ML_MODEL', 'DATASET', 'API_KEY', 'SYSTEM_CONFIG', name='resourcetype'), nullable=False),
    sa.Column('resource_id', sa.String(), nullable=True),
    sa.Column('granted_by', sa.String(), nullable=True),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('conditions', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('revoked_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['granted_by'], ['users.id'], name=op.f('fk_user_permissions_granted_by_users'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_permissions_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_permissions'))
    )
    op.create_index('idx_user_permissions_expires', 'user_permissions', ['expires_at'], unique=False)
    op.create_index('idx_user_permissions_permission', 'user_permissions', ['permission'], unique=False)
    op.create_index('idx_user_permissions_resource', 'user_permissions', ['resource_type', 'resource_id'], unique=False)
    op.create_index('idx_user_permissions_user_id', 'user_permissions', ['user_id'], unique=False)
    op.create_index(op.f('ix_user_permissions_expires_at'), 'user_permissions', ['expires_at'], unique=False)
    op.create_index(op.f('ix_user_permissions_is_active'), 'user_permissions', ['is_active'], unique=False)
    op.create_index(op.f('ix_user_permissions_permission'), 'user_permissions', ['permission'], unique=False)
    op.create_index(op.f('ix_user_permissions_resource_id'), 'user_permissions', ['resource_id'], unique=False)
    op.create_index(op.f('ix_user_permissions_resource_type'), 'user_permissions', ['resource_type'], unique=False)
    op.create_index(op.f('ix_user_permissions_user_id'), 'user_permissions', ['user_id'], unique=False)
    op.create_table('user_preferences',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('theme', sa.String(length=20), nullable=True),
    sa.Column('language', sa.String(length=10), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('email_notifications', sa.Boolean(), nullable=True),
    sa.Column('push_notifications', sa.Boolean(), nullable=True),
    sa.Column('marketing_emails', sa.Boolean(), nullable=True),
    sa.Column('default_ai_model', sa.String(length=100), nullable=True),
    sa.Column('ai_safety_level', sa.String(length=20), nullable=True),
    sa.Column('advanced_settings', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_preferences_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_preferences'))
    )
    op.create_index('idx_user_preferences_user_id', 'user_preferences', ['user_id'], unique=False)
    op.create_index(op.f('ix_user_preferences_user_id'), 'user_preferences', ['user_id'], unique=True)
    op.create_table('user_sessions',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('session_token', sa.String(length=255), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_activity_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_sessions_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_sessions'))
    )
    op.create_index('idx_user_sessions_expires_at', 'user_sessions', ['expires_at'], unique=False)
    op.create_index('idx_user_sessions_token', 'user_sessions', ['session_token'], unique=False)
    op.create_index('idx_user_sessions_user_id', 'user_sessions', ['user_id'], unique=False)
    op.create_index(op.f('ix_user_sessions_expires_at'), 'user_sessions', ['expires_at'], unique=False)
    op.create_index(op.f('ix_user_sessions_is_active'), 'user_sessions', ['is_active'], unique=False)
    op.create_index(op.f('ix_user_sessions_session_token'), 'user_sessions', ['session_token'], unique=True)
    op.create_index(op.f('ix_user_sessions_user_id'), 'user_sessions', ['user_id'], unique=False)
    op.create_table('ai_requests',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('project_id', sa.String(), nullable=True),
    sa.Column('request_type', sa.Enum('IMAGE_GENERATION', 'TEXT_GENERATION', 'CODE_GENERATION', 'AUDIO_GENERATION', 'MODEL_TRAINING', 'STYLE_TRANSFER', 'UPSCALING', 'BACKGROUND_REMOVAL', 'OBJECT_DETECTION', 'SCENE_GENERATION', name='airequesttype'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', 'CANCELLED', 'QUEUED', name='airequeststatus'), nullable=True),
    sa.Column('model_name', sa.String(length=100), nullable=False),
    sa.Column('model_version', sa.String(length=50), nullable=True),
    sa.Column('provider', sa.String(length=50), nullable=False),
    sa.Column('prompt', sa.Text(), nullable=True),
    sa.Column('negative_prompt', sa.Text(), nullable=True),
    sa.Column('parameters', sa.JSON(), nullable=True),
    sa.Column('input_data', sa.JSON(), nullable=True),
    sa.Column('output_data', sa.JSON(), nullable=True),
    sa.Column('queue_position', sa.Integer(), nullable=True),
    sa.Column('processing_time_seconds', sa.Float(), nullable=True),
    sa.Column('gpu_time_seconds', sa.Float(), nullable=True),
    sa.Column('cost_credits', sa.Float(), nullable=True),
    sa.Column('cost_usd', sa.Float(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('max_retries', sa.Integer(), nullable=True),
    sa.Column('user_rating', sa.Integer(), nullable=True),
    sa.Column('user_feedback', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name=op.f('fk_ai_requests_project_id_projects'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_ai_requests_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ai_requests'))
    )
    op.create_index('idx_ai_requests_created_at', 'ai_requests', ['created_at'], unique=False)
    op.create_index('idx_ai_requests_project_id', 'ai_requests', ['project_id'], unique=False)
    op.create_index('idx_ai_requests_status', 'ai_requests', ['status'], unique=False)
    op.create_index('idx_ai_requests_type', 'ai_requests', ['request_type'], unique=False)
    op.create_index('idx_ai_requests_user_id', 'ai_requests', ['user_id'], unique=False)
    op.create_index(op.f('ix_ai_requests_created_at'), 'ai_requests', ['created_at'], unique=False)
    op.create_index(op.f('ix_ai_requests_model_name'), 'ai_requests', ['model_name'], unique=False)
    op.create_index(op.f('ix_ai_requests_project_id'), 'ai_requests', ['project_id'], unique=False)
    op.create_index(op.f('ix_ai_requests_request_type'), 'ai_requests', ['request_type'], unique=False)
    op.create_index(op.f('ix_ai_requests_status'), 'ai_requests', ['status'], unique=False)
    op.create_index(op.f('ix_ai_requests_user_id'), 'ai_requests', ['user_id'], unique=False)
    op.create_table('assets',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('project_id', sa.String(), nullable=False),
    sa.Column('uploaded_by', sa.String(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=1000), nullable=False),
    sa.Column('file_url', sa.String(length=1000), nullable=True),
    sa.Column('file_size_bytes', sa.Integer(), nullable=False),
    sa.Column('mime_type', sa.String(length=100), nullable=False),
    sa.Column('file_hash', sa.String(length=64), nullable=False),
    sa.Column('asset_type', sa.Enum('IMAGE', 'AUDIO', 'VIDEO', 'MODEL_3D', 'TEXTURE', 'SCRIPT', 'SCENE', 'ANIMATION', 'FONT', 'MATERIAL', 'SHADER', 'DOCUMENT', 'OTHER', name='assettype'), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('alt_text', sa.String(length=500), nullable=True),
    sa.Column('asset_metadata', sa.JSON(), nullable=True),
    sa.Column('is_ai_generated', sa.Boolean(), nullable=True),
    sa.Column('ai_model_used', sa.String(length=100), nullable=True),
    sa.Column('ai_prompt', sa.Text(), nullable=True),
    sa.Column('ai_parameters', sa.JSON(), nullable=True),
    sa.Column('version', sa.String(length=20), nullable=True),
    sa.Column('parent_asset_id', sa.String(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('is_featured', sa.Boolean(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=True),
    sa.Column('license', sa.String(length=50), nullable=True),
    sa.Column('attribution_required', sa.Boolean(), nullable=True),
    sa.Column('commercial_use_allowed', sa.Boolean(), nullable=True),
    sa.Column('download_count', sa.Integer(), nullable=True),
    sa.Column('view_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('search_vector', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['parent_asset_id'], ['assets.id'], name=op.f('fk_assets_parent_asset_id_assets')),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name=op.f('fk_assets_project_id_projects'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], name=op.f('fk_assets_uploaded_by_users'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_assets'))
    )
    op.create_index('idx_assets_created_at', 'assets', ['created_at'], unique=False)
    op.create_index('idx_assets_project_id', 'assets', ['project_id'], unique=False)
    op.create_index('idx_assets_search', 'assets', ['search_vector'], unique=False)
    op.create_index('idx_assets_tags', 'assets', ['tags'], unique=False)
    op.create_index('idx_assets_type', 'assets', ['asset_type'], unique=False)
    op.create_index('idx_assets_uploaded_by', 'assets', ['uploaded_by'], unique=False)
    op.create_index(op.f('ix_assets_asset_type'), 'assets', ['asset_type'], unique=False)
    op.create_index(op.f('ix_assets_category'), 'assets', ['category'], unique=False)
    op.create_index(op.f('ix_assets_created_at'), 'assets', ['created_at'], unique=False)
    op.create_index(op.f('ix_assets_file_hash'), 'assets', ['file_hash'], unique=False)
    op.create_index(op.f('ix_assets_is_ai_generated'), 'assets', ['is_ai_generated'], unique=False)
    op.create_index(op.f('ix_assets_is_archived'), 'assets', ['is_archived'], unique=False)
    op.create_index(op.f('ix_assets_is_featured'), 'assets', ['is_featured'], unique=False)
    op.create_index(op.f('ix_assets_is_public'), 'assets', ['is_public'], unique=False)
    op.create_index(op.f('ix_assets_mime_type'), 'assets', ['mime_type'], unique=False)
    op.create_index(op.f('ix_assets_name'), 'assets', ['name'], unique=False)
    op.create_index(op.f('ix_assets_parent_asset_id'), 'assets', ['parent_asset_id'], unique=False)
    op.create_index(op.f('ix_assets_project_id'), 'assets', ['project_id'], unique=False)
    op.create_index(op.f('ix_assets_tags'), 'assets', ['tags'], unique=False)
    op.create_index(op.f('ix_assets_uploaded_by'), 'assets', ['uploaded_by'], unique=False)
    op.create_table('datasets',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('project_id', sa.String(), nullable=False),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('dataset_type', sa.Enum('IMAGES', 'TEXT', 'AUDIO', 'VIDEO', 'MIXED', name='datasettype'), nullable=False),
    sa.Column('version', sa.String(length=20), nullable=False),
    sa.Column('parent_dataset_id', sa.String(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('categories', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('storage_path', sa.String(length=1000), nullable=True),
    sa.Column('file_count', sa.Integer(), nullable=True),
    sa.Column('total_size_bytes', sa.Integer(), nullable=True),
    sa.Column('sample_count', sa.Integer(), nullable=True),
    sa.Column('class_count', sa.Integer(), nullable=True),
    sa.Column('statistics', sa.JSON(), nullable=True),
    sa.Column('quality_score', sa.Float(), nullable=True),
    sa.Column('validation_results', sa.JSON(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('license', sa.String(length=50), nullable=True),
    sa.Column('attribution_required', sa.Boolean(), nullable=True),
    sa.Column('download_count', sa.Integer(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('is_processed', sa.Boolean(), nullable=True),
    sa.Column('processing_progress', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name=op.f('fk_datasets_created_by_users'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['parent_dataset_id'], ['datasets.id'], name=op.f('fk_datasets_parent_dataset_id_datasets')),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name=op.f('fk_datasets_project_id_projects'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_datasets'))
    )
    op.create_index('idx_datasets_created_at', 'datasets', ['created_at'], unique=False)
    op.create_index('idx_datasets_created_by', 'datasets', ['created_by'], unique=False)
    op.create_index('idx_datasets_project_id', 'datasets', ['project_id'], unique=False)
    op.create_index('idx_datasets_tags', 'datasets', ['tags'], unique=False)
    op.create_index('idx_datasets_type', 'datasets', ['dataset_type'], unique=False)
    op.create_index(op.f('ix_datasets_created_at'), 'datasets', ['created_at'], unique=False)
    op.create_index(op.f('ix_datasets_created_by'), 'datasets', ['created_by'], unique=False)
    op.create_index(op.f('ix_datasets_dataset_type'), 'datasets', ['dataset_type'], unique=False)
    op.create_index(op.f('ix_datasets_is_processed'), 'datasets', ['is_processed'], unique=False)
    op.create_index(op.f('ix_datasets_is_public'), 'datasets', ['is_public'], unique=False)
    op.create_index(op.f('ix_datasets_name'), 'datasets', ['name'], unique=False)
    op.create_index(op.f('ix_datasets_parent_dataset_id'), 'datasets', ['parent_dataset_id'], unique=False)
    op.create_index(op.f('ix_datasets_project_id'), 'datasets', ['project_id'], unique=False)
    op.create_index(op.f('ix_datasets_tags'), 'datasets', ['tags'], unique=False)
    op.create_table('ml_models',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('project_id', sa.String(), nullable=False),
    sa.Column('trained_by', sa.String(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('model_type', sa.Enum('DIFFUSION', 'GAN', 'VAE', 'TRANSFORMER', 'CNN', 'CUSTOM', name='mlmodeltype'), nullable=False),
    sa.Column('version', sa.String(length=20), nullable=False),
    sa.Column('parent_model_id', sa.String(), nullable=True),
    sa.Column('architecture', sa.JSON(), nullable=True),
    sa.Column('hyperparameters', sa.JSON(), nullable=True),
    sa.Column('dataset_id', sa.String(), nullable=True),
    sa.Column('training_config', sa.JSON(), nullable=True),
    sa.Column('model_path', sa.String(length=1000), nullable=True),
    sa.Column('weights_path', sa.String(length=1000), nullable=True),
    sa.Column('config_path', sa.String(length=1000), nullable=True),
    sa.Column('file_size_bytes', sa.Integer(), nullable=True),
    sa.Column('checksum', sa.String(length=64), nullable=True),
    sa.Column('accuracy', sa.Float(), nullable=True),
    sa.Column('loss', sa.Float(), nullable=True),
    sa.Column('metrics', sa.JSON(), nullable=True),
    sa.Column('status', sa.Enum('TRAINING', 'TRAINED', 'FAILED', 'ARCHIVED', 'ACTIVE', name='mlmodelstatus'), nullable=True),
    sa.Column('training_progress', sa.Float(), nullable=True),
    sa.Column('epochs_completed', sa.Integer(), nullable=True),
    sa.Column('total_epochs', sa.Integer(), nullable=True),
    sa.Column('is_deployed', sa.Boolean(), nullable=True),
    sa.Column('deployment_url', sa.String(length=500), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('training_started_at', sa.DateTime(), nullable=True),
    sa.Column('training_completed_at', sa.DateTime(), nullable=True),
    sa.Column('deployed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['dataset_id'], ['datasets.id'], name=op.f('fk_ml_models_dataset_id_datasets')),
    sa.ForeignKeyConstraint(['parent_model_id'], ['ml_models.id'], name=op.f('fk_ml_models_parent_model_id_ml_models')),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name=op.f('fk_ml_models_project_id_projects'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['trained_by'], ['users.id'], name=op.f('fk_ml_models_trained_by_users'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ml_models'))
    )
    op.create_index('idx_ml_models_created_at', 'ml_models', ['created_at'], unique=False)
    op.create_index('idx_ml_models_project_id', 'ml_models', ['project_id'], unique=False)
    op.create_index('idx_ml_models_status', 'ml_models', ['status'], unique=False)
    op.create_index('idx_ml_models_trained_by', 'ml_models', ['trained_by'], unique=False)
    op.create_index('idx_ml_models_type', 'ml_models', ['model_type'], unique=False)
    op.create_index(op.f('ix_ml_models_created_at'), 'ml_models', ['created_at'], unique=False)
    op.create_index(op.f('ix_ml_models_dataset_id'), 'ml_models', ['dataset_id'], unique=False)
    op.create_index(op.f('ix_ml_models_is_deployed'), 'ml_models', ['is_deployed'], unique=False)
    op.create_index(op.f('ix_ml_models_model_type'), 'ml_models', ['model_type'], unique=False)
    op.create_index(op.f('ix_ml_models_name'), 'ml_models', ['name'], unique=False)
    op.create_index(op.f('ix_ml_models_parent_model_id'), 'ml_models', ['parent_model_id'], unique=False)
    op.create_index(op.f('ix_ml_models_project_id'), 'ml_models', ['project_id'], unique=False)
    op.create_index(op.f('ix_ml_models_status'), 'ml_models', ['status'], unique=False)
    op.create_index(op.f('ix_ml_models_trained_by'), 'ml_models', ['trained_by'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_ml_models_trained_by'), table_name='ml_models')
    op.drop_index(op.f('ix_ml_models_status'), table_name='ml_models')
    op.drop_index(op.f('ix_ml_models_project_id'), table_name='ml_models')
    op.drop_index(op.f('ix_ml_models_parent_model_id'), table_name='ml_models')
    op.drop_index(op.f('ix_ml_models_name'), table_name='ml_models')
    op.drop_index(op.f('ix_ml_models_model_type'), table_name='ml_models')
    op.drop_index(op.f('ix_ml_models_is_deployed'), table_name='ml_models')
    op.drop_index(op.f('ix_ml_models_dataset_id'), table_name='ml_models')
    op.drop_index(op.f('ix_ml_models_created_at'), table_name='ml_models')
    op.drop_index('idx_ml_models_type', table_name='ml_models')
    op.drop_index('idx_ml_models_trained_by', table_name='ml_models')
    op.drop_index('idx_ml_models_status', table_name='ml_models')
    op.drop_index('idx_ml_models_project_id', table_name='ml_models')
    op.drop_index('idx_ml_models_created_at', table_name='ml_models')
    op.drop_table('ml_models')
    op.drop_index(op.f('ix_datasets_tags'), table_name='datasets')
    op.drop_index(op.f('ix_datasets_project_id'), table_name='datasets')
    op.drop_index(op.f('ix_datasets_parent_dataset_id'), table_name='datasets')
    op.drop_index(op.f('ix_datasets_name'), table_name='datasets')
    op.drop_index(op.f('ix_datasets_is_public'), table_name='datasets')
    op.drop_index(op.f('ix_datasets_is_processed'), table_name='datasets')
    op.drop_index(op.f('ix_datasets_dataset_type'), table_name='datasets')
    op.drop_index(op.f('ix_datasets_created_by'), table_name='datasets')
    op.drop_index(op.f('ix_datasets_created_at'), table_name='datasets')
    op.drop_index('idx_datasets_type', table_name='datasets')
    op.drop_index('idx_datasets_tags', table_name='datasets')
    op.drop_index('idx_datasets_project_id', table_name='datasets')
    op.drop_index('idx_datasets_created_by', table_name='datasets')
    op.drop_index('idx_datasets_created_at', table_name='datasets')
    op.drop_table('datasets')
    op.drop_index(op.f('ix_assets_uploaded_by'), table_name='assets')
    op.drop_index(op.f('ix_assets_tags'), table_name='assets')
    op.drop_index(op.f('ix_assets_project_id'), table_name='assets')
    op.drop_index(op.f('ix_assets_parent_asset_id'), table_name='assets')
    op.drop_index(op.f('ix_assets_name'), table_name='assets')
    op.drop_index(op.f('ix_assets_mime_type'), table_name='assets')
    op.drop_index(op.f('ix_assets_is_public'), table_name='assets')
    op.drop_index(op.f('ix_assets_is_featured'), table_name='assets')
    op.drop_index(op.f('ix_assets_is_archived'), table_name='assets')
    op.drop_index(op.f('ix_assets_is_ai_generated'), table_name='assets')
    op.drop_index(op.f('ix_assets_file_hash'), table_name='assets')
    op.drop_index(op.f('ix_assets_created_at'), table_name='assets')
    op.drop_index(op.f('ix_assets_category'), table_name='assets')
    op.drop_index(op.f('ix_assets_asset_type'), table_name='assets')
    op.drop_index('idx_assets_uploaded_by', table_name='assets')
    op.drop_index('idx_assets_type', table_name='assets')
    op.drop_index('idx_assets_tags', table_name='assets')
    op.drop_index('idx_assets_search', table_name='assets')
    op.drop_index('idx_assets_project_id', table_name='assets')
    op.drop_index('idx_assets_created_at', table_name='assets')
    op.drop_table('assets')
    op.drop_index(op.f('ix_ai_requests_user_id'), table_name='ai_requests')
    op.drop_index(op.f('ix_ai_requests_status'), table_name='ai_requests')
    op.drop_index(op.f('ix_ai_requests_request_type'), table_name='ai_requests')
    op.drop_index(op.f('ix_ai_requests_project_id'), table_name='ai_requests')
    op.drop_index(op.f('ix_ai_requests_model_name'), table_name='ai_requests')
    op.drop_index(op.f('ix_ai_requests_created_at'), table_name='ai_requests')
    op.drop_index('idx_ai_requests_user_id', table_name='ai_requests')
    op.drop_index('idx_ai_requests_type', table_name='ai_requests')
    op.drop_index('idx_ai_requests_status', table_name='ai_requests')
    op.drop_index('idx_ai_requests_project_id', table_name='ai_requests')
    op.drop_index('idx_ai_requests_created_at', table_name='ai_requests')
    op.drop_table('ai_requests')
    op.drop_index(op.f('ix_user_sessions_user_id'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_session_token'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_is_active'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_expires_at'), table_name='user_sessions')
    op.drop_index('idx_user_sessions_user_id', table_name='user_sessions')
    op.drop_index('idx_user_sessions_token', table_name='user_sessions')
    op.drop_index('idx_user_sessions_expires_at', table_name='user_sessions')
    op.drop_table('user_sessions')
    op.drop_index(op.f('ix_user_preferences_user_id'), table_name='user_preferences')
    op.drop_index('idx_user_preferences_user_id', table_name='user_preferences')
    op.drop_table('user_preferences')
    op.drop_index(op.f('ix_user_permissions_user_id'), table_name='user_permissions')
    op.drop_index(op.f('ix_user_permissions_resource_type'), table_name='user_permissions')
    op.drop_index(op.f('ix_user_permissions_resource_id'), table_name='user_permissions')
    op.drop_index(op.f('ix_user_permissions_permission'), table_name='user_permissions')
    op.drop_index(op.f('ix_user_permissions_is_active'), table_name='user_permissions')
    op.drop_index(op.f('ix_user_permissions_expires_at'), table_name='user_permissions')
    op.drop_index('idx_user_permissions_user_id', table_name='user_permissions')
    op.drop_index('idx_user_permissions_resource', table_name='user_permissions')
    op.drop_index('idx_user_permissions_permission', table_name='user_permissions')
    op.drop_index('idx_user_permissions_expires', table_name='user_permissions')
    op.drop_table('user_permissions')
    op.drop_index(op.f('ix_user_consents_user_id'), table_name='user_consents')
    op.drop_index(op.f('ix_user_consents_created_at'), table_name='user_consents')
    op.drop_index(op.f('ix_user_consents_consent_type'), table_name='user_consents')
    op.drop_index('idx_user_consents_user_id', table_name='user_consents')
    op.drop_index('idx_user_consents_type', table_name='user_consents')
    op.drop_index('idx_user_consents_granted', table_name='user_consents')
    op.drop_index('idx_user_consents_created', table_name='user_consents')
    op.drop_table('user_consents')
    op.drop_index(op.f('ix_usage_metrics_user_id'), table_name='usage_metrics')
    op.drop_index(op.f('ix_usage_metrics_timestamp'), table_name='usage_metrics')
    op.drop_index(op.f('ix_usage_metrics_period_start'), table_name='usage_metrics')
    op.drop_index(op.f('ix_usage_metrics_period_end'), table_name='usage_metrics')
    op.drop_index(op.f('ix_usage_metrics_period'), table_name='usage_metrics')
    op.drop_index(op.f('ix_usage_metrics_metric_type'), table_name='usage_metrics')
    op.drop_index(op.f('ix_usage_metrics_metric_name'), table_name='usage_metrics')
    op.drop_index('idx_usage_metrics_user_id', table_name='usage_metrics')
    op.drop_index('idx_usage_metrics_type', table_name='usage_metrics')
    op.drop_index('idx_usage_metrics_timestamp', table_name='usage_metrics')
    op.drop_index('idx_usage_metrics_period', table_name='usage_metrics')
    op.drop_index('idx_usage_metrics_name', table_name='usage_metrics')
    op.drop_table('usage_metrics')
    op.drop_index(op.f('ix_projects_visibility'), table_name='projects')
    op.drop_index(op.f('ix_projects_template_id'), table_name='projects')
    op.drop_index(op.f('ix_projects_tags'), table_name='projects')
    op.drop_index(op.f('ix_projects_status'), table_name='projects')
    op.drop_index(op.f('ix_projects_slug'), table_name='projects')
    op.drop_index(op.f('ix_projects_owner_id'), table_name='projects')
    op.drop_index(op.f('ix_projects_name'), table_name='projects')
    op.drop_index(op.f('ix_projects_is_template'), table_name='projects')
    op.drop_index(op.f('ix_projects_is_featured'), table_name='projects')
    op.drop_index(op.f('ix_projects_genre'), table_name='projects')
    op.drop_index(op.f('ix_projects_engine'), table_name='projects')
    op.drop_index(op.f('ix_projects_created_at'), table_name='projects')
    op.drop_index(op.f('ix_projects_ai_generated_content'), table_name='projects')
    op.drop_index('idx_projects_visibility', table_name='projects')
    op.drop_index('idx_projects_template_id', table_name='projects')
    op.drop_index('idx_projects_target_platforms', table_name='projects')
    op.drop_index('idx_projects_tags', table_name='projects')
    op.drop_index('idx_projects_status', table_name='projects')
    op.drop_index('idx_projects_slug', table_name='projects')
    op.drop_index('idx_projects_search', table_name='projects')
    op.drop_index('idx_projects_owner_id', table_name='projects')
    op.drop_index('idx_projects_genre', table_name='projects')
    op.drop_index('idx_projects_engine', table_name='projects')
    op.drop_index('idx_projects_created_at', table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_presigned_urls_user_id'), table_name='presigned_urls')
    op.drop_index(op.f('ix_presigned_urls_url_hash'), table_name='presigned_urls')
    op.drop_index(op.f('ix_presigned_urls_resource_id'), table_name='presigned_urls')
    op.drop_index(op.f('ix_presigned_urls_expires_at'), table_name='presigned_urls')
    op.drop_index('idx_presigned_urls_user_id', table_name='presigned_urls')
    op.drop_index('idx_presigned_urls_resource', table_name='presigned_urls')
    op.drop_index('idx_presigned_urls_expires', table_name='presigned_urls')
    op.drop_table('presigned_urls')
    op.drop_index(op.f('ix_audit_logs_user_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_timestamp'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_severity'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_session_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_risk_level'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_resource_type'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_resource_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_request_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_ip_address'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_data_classification'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_contains_pii'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_action'), table_name='audit_logs')
    op.drop_index('idx_audit_logs_user_id', table_name='audit_logs')
    op.drop_index('idx_audit_logs_timestamp', table_name='audit_logs')
    op.drop_index('idx_audit_logs_severity', table_name='audit_logs')
    op.drop_index('idx_audit_logs_resource_type', table_name='audit_logs')
    op.drop_index('idx_audit_logs_ip_address', table_name='audit_logs')
    op.drop_index('idx_audit_logs_action', table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index(op.f('ix_api_keys_user_id'), table_name='api_keys')
    op.drop_index(op.f('ix_api_keys_key_hash'), table_name='api_keys')
    op.drop_index(op.f('ix_api_keys_is_active'), table_name='api_keys')
    op.drop_index(op.f('ix_api_keys_expires_at'), table_name='api_keys')
    op.drop_index('idx_api_keys_user_id', table_name='api_keys')
    op.drop_index('idx_api_keys_hash', table_name='api_keys')
    op.drop_index('idx_api_keys_expires', table_name='api_keys')
    op.drop_index('idx_api_keys_active', table_name='api_keys')
    op.drop_table('api_keys')
    op.drop_index(op.f('ix_access_tokens_user_id'), table_name='access_tokens')
    op.drop_index(op.f('ix_access_tokens_token_hash'), table_name='access_tokens')
    op.drop_index(op.f('ix_access_tokens_resource_type'), table_name='access_tokens')
    op.drop_index(op.f('ix_access_tokens_resource_id'), table_name='access_tokens')
    op.drop_index(op.f('ix_access_tokens_is_active'), table_name='access_tokens')
    op.drop_index(op.f('ix_access_tokens_expires_at'), table_name='access_tokens')
    op.drop_index('idx_access_tokens_user_id', table_name='access_tokens')
    op.drop_index('idx_access_tokens_resource', table_name='access_tokens')
    op.drop_index('idx_access_tokens_hash', table_name='access_tokens')
    op.drop_index('idx_access_tokens_expires', table_name='access_tokens')
    op.drop_table('access_tokens')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_index(op.f('ix_users_role'), table_name='users')
    op.drop_index(op.f('ix_users_provider_id'), table_name='users')
    op.drop_index(op.f('ix_users_provider'), table_name='users')
    op.drop_index(op.f('ix_users_is_verified'), table_name='users')
    op.drop_index(op.f('ix_users_is_admin'), table_name='users')
    op.drop_index(op.f('ix_users_is_active'), table_name='users')
    op.drop_index(op.f('ix_users_google_id'), table_name='users')
    op.drop_index(op.f('ix_users_github_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_created_at'), table_name='users')
    op.drop_index('idx_users_username', table_name='users')
    op.drop_index('idx_users_role', table_name='users')
    op.drop_index('idx_users_provider_id', table_name='users')
    op.drop_index('idx_users_provider', table_name='users')
    op.drop_index('idx_users_github_id', table_name='users')
    op.drop_index('idx_users_email', table_name='users')
    op.drop_index('idx_users_created_at', table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_system_config_key'), table_name='system_config')
    op.drop_index(op.f('ix_system_config_is_sensitive'), table_name='system_config')
    op.drop_index(op.f('ix_system_config_environment'), table_name='system_config')
    op.drop_index(op.f('ix_system_config_category'), table_name='system_config')
    op.drop_index('idx_system_config_key', table_name='system_config')
    op.drop_index('idx_system_config_environment', table_name='system_config')
    op.drop_index('idx_system_config_category', table_name='system_config')
    op.drop_table('system_config')
    op.drop_index(op.f('ix_storage_configs_provider'), table_name='storage_configs')
    op.drop_index(op.f('ix_storage_configs_name'), table_name='storage_configs')
    op.drop_index(op.f('ix_storage_configs_is_default'), table_name='storage_configs')
    op.drop_index(op.f('ix_storage_configs_is_active'), table_name='storage_configs')
    op.drop_index('idx_storage_configs_provider', table_name='storage_configs')
    op.drop_index('idx_storage_configs_default', table_name='storage_configs')
    op.drop_index('idx_storage_configs_active', table_name='storage_configs')
    op.drop_table('storage_configs')
    op.drop_index(op.f('ix_game_templates_tags'), table_name='game_templates')
    op.drop_index(op.f('ix_game_templates_slug'), table_name='game_templates')
    op.drop_index(op.f('ix_game_templates_name'), table_name='game_templates')
    op.drop_index(op.f('ix_game_templates_is_premium'), table_name='game_templates')
    op.drop_index(op.f('ix_game_templates_is_featured'), table_name='game_templates')
    op.drop_index(op.f('ix_game_templates_is_active'), table_name='game_templates')
    op.drop_index(op.f('ix_game_templates_genre'), table_name='game_templates')
    op.drop_index(op.f('ix_game_templates_engine'), table_name='game_templates')
    op.drop_index(op.f('ix_game_templates_category'), table_name='game_templates')
    op.drop_index('idx_game_templates_tags', table_name='game_templates')
    op.drop_index('idx_game_templates_slug', table_name='game_templates')
    op.drop_index('idx_game_templates_genre', table_name='game_templates')
    op.drop_index('idx_game_templates_featured', table_name='game_templates')
    op.drop_index('idx_game_templates_engine', table_name='game_templates')
    op.drop_index('idx_game_templates_category', table_name='game_templates')
    op.drop_index('idx_game_templates_active', table_name='game_templates')
    op.drop_table('game_templates')
    # ### end Alembic commands ###
