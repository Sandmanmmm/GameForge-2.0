"""Create classified data models

Revision ID: 28ca5917e1a7
Revises: 
Create Date: 2025-09-14 17:29:50.831753

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '28ca5917e1a7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    """Upgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audit_logs',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=True),
    sa.Column('resource_type', sa.String(length=50), nullable=True),
    sa.Column('resource_id', sa.String(length=36), nullable=True),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('result', sa.String(length=20), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('data_classification', sa.String(length=50), nullable=False),
    sa.Column('sensitivity_level', sa.Integer(), nullable=False),
    sa.Column('encryption_required', sa.String(length=20), nullable=False),
    sa.Column('owner_id', sa.String(length=36), nullable=True),
    sa.Column('access_pattern', sa.String(length=20), nullable=False),
    sa.Column('retention_until', sa.DateTime(), nullable=True),
    sa.Column('archive_after', sa.DateTime(), nullable=True),
    sa.Column('archived_at', sa.DateTime(), nullable=True),
    sa.Column('purged_at', sa.DateTime(), nullable=True),
    sa.Column('classification_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_accessed_at', sa.DateTime(), nullable=True),
    sa.Column('access_count', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_audit_logs'))
    )
    op.create_index('idx_audit_event_type', 'audit_logs', ['event_type'], unique=False)
    op.create_index('idx_audit_ip', 'audit_logs', ['ip_address'], unique=False)
    op.create_index('idx_audit_resource', 'audit_logs', ['resource_type', 'resource_id'], unique=False)
    op.create_index('idx_audit_time_severity', 'audit_logs', ['created_at', 'severity'], unique=False)
    op.create_index('idx_audit_user_action', 'audit_logs', ['user_id', 'action'], unique=False)
    op.create_index(op.f('ix_audit_logs_action'), 'audit_logs', ['action'], unique=False)
    op.create_index(op.f('ix_audit_logs_archive_after'), 'audit_logs', ['archive_after'], unique=False)
    op.create_index(op.f('ix_audit_logs_created_at'), 'audit_logs', ['created_at'], unique=False)
    op.create_index(op.f('ix_audit_logs_data_classification'), 'audit_logs', ['data_classification'], unique=False)
    op.create_index(op.f('ix_audit_logs_event_type'), 'audit_logs', ['event_type'], unique=False)
    op.create_index(op.f('ix_audit_logs_ip_address'), 'audit_logs', ['ip_address'], unique=False)
    op.create_index(op.f('ix_audit_logs_owner_id'), 'audit_logs', ['owner_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_resource_id'), 'audit_logs', ['resource_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_resource_type'), 'audit_logs', ['resource_type'], unique=False)
    op.create_index(op.f('ix_audit_logs_result'), 'audit_logs', ['result'], unique=False)
    op.create_index(op.f('ix_audit_logs_retention_until'), 'audit_logs', ['retention_until'], unique=False)
    op.create_index(op.f('ix_audit_logs_sensitivity_level'), 'audit_logs', ['sensitivity_level'], unique=False)
    op.create_index(op.f('ix_audit_logs_severity'), 'audit_logs', ['severity'], unique=False)
    op.create_index(op.f('ix_audit_logs_user_id'), 'audit_logs', ['user_id'], unique=False)
    op.create_table('usage_metrics',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('metric_type', sa.String(length=50), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=True),
    sa.Column('resource_type', sa.String(length=50), nullable=True),
    sa.Column('metric_value', sa.Integer(), nullable=False),
    sa.Column('metric_data', sa.JSON(), nullable=True),
    sa.Column('period_start', sa.DateTime(), nullable=False),
    sa.Column('period_end', sa.DateTime(), nullable=False),
    sa.Column('aggregation_level', sa.String(length=20), nullable=False),
    sa.Column('data_classification', sa.String(length=50), nullable=False),
    sa.Column('sensitivity_level', sa.Integer(), nullable=False),
    sa.Column('encryption_required', sa.String(length=20), nullable=False),
    sa.Column('owner_id', sa.String(length=36), nullable=True),
    sa.Column('access_pattern', sa.String(length=20), nullable=False),
    sa.Column('retention_until', sa.DateTime(), nullable=True),
    sa.Column('archive_after', sa.DateTime(), nullable=True),
    sa.Column('archived_at', sa.DateTime(), nullable=True),
    sa.Column('purged_at', sa.DateTime(), nullable=True),
    sa.Column('classification_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_accessed_at', sa.DateTime(), nullable=True),
    sa.Column('access_count', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_usage_metrics'))
    )
    op.create_index('idx_metrics_aggregation', 'usage_metrics', ['aggregation_level'], unique=False)
    op.create_index('idx_metrics_resource', 'usage_metrics', ['resource_type'], unique=False)
    op.create_index('idx_metrics_type_period', 'usage_metrics', ['metric_type', 'period_start', 'period_end'], unique=False)
    op.create_index('idx_metrics_user_type', 'usage_metrics', ['user_id', 'metric_type'], unique=False)
    op.create_index(op.f('ix_usage_metrics_archive_after'), 'usage_metrics', ['archive_after'], unique=False)
    op.create_index(op.f('ix_usage_metrics_created_at'), 'usage_metrics', ['created_at'], unique=False)
    op.create_index(op.f('ix_usage_metrics_data_classification'), 'usage_metrics', ['data_classification'], unique=False)
    op.create_index(op.f('ix_usage_metrics_metric_type'), 'usage_metrics', ['metric_type'], unique=False)
    op.create_index(op.f('ix_usage_metrics_owner_id'), 'usage_metrics', ['owner_id'], unique=False)
    op.create_index(op.f('ix_usage_metrics_period_end'), 'usage_metrics', ['period_end'], unique=False)
    op.create_index(op.f('ix_usage_metrics_period_start'), 'usage_metrics', ['period_start'], unique=False)
    op.create_index(op.f('ix_usage_metrics_resource_type'), 'usage_metrics', ['resource_type'], unique=False)
    op.create_index(op.f('ix_usage_metrics_retention_until'), 'usage_metrics', ['retention_until'], unique=False)
    op.create_index(op.f('ix_usage_metrics_sensitivity_level'), 'usage_metrics', ['sensitivity_level'], unique=False)
    op.create_index(op.f('ix_usage_metrics_user_id'), 'usage_metrics', ['user_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('provider', sa.String(length=20), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('data_classification', sa.String(length=50), nullable=False),
    sa.Column('sensitivity_level', sa.Integer(), nullable=False),
    sa.Column('encryption_required', sa.String(length=20), nullable=False),
    sa.Column('owner_id', sa.String(length=36), nullable=True),
    sa.Column('access_pattern', sa.String(length=20), nullable=False),
    sa.Column('retention_until', sa.DateTime(), nullable=True),
    sa.Column('archive_after', sa.DateTime(), nullable=True),
    sa.Column('archived_at', sa.DateTime(), nullable=True),
    sa.Column('purged_at', sa.DateTime(), nullable=True),
    sa.Column('classification_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_accessed_at', sa.DateTime(), nullable=True),
    sa.Column('access_count', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_index('idx_user_email_active', 'users', ['email', 'is_active'], unique=False)
    op.create_index('idx_user_provider', 'users', ['provider'], unique=False)
    op.create_index('idx_user_username_active', 'users', ['username', 'is_active'], unique=False)
    op.create_index(op.f('ix_users_archive_after'), 'users', ['archive_after'], unique=False)
    op.create_index(op.f('ix_users_created_at'), 'users', ['created_at'], unique=False)
    op.create_index(op.f('ix_users_data_classification'), 'users', ['data_classification'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_owner_id'), 'users', ['owner_id'], unique=False)
    op.create_index(op.f('ix_users_retention_until'), 'users', ['retention_until'], unique=False)
    op.create_index(op.f('ix_users_sensitivity_level'), 'users', ['sensitivity_level'], unique=False)
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('api_keys',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('key_hash', sa.String(length=255), nullable=False),
    sa.Column('scopes', sa.JSON(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('rate_limit', sa.Integer(), nullable=True),
    sa.Column('data_classification', sa.String(length=50), nullable=False),
    sa.Column('sensitivity_level', sa.Integer(), nullable=False),
    sa.Column('encryption_required', sa.String(length=20), nullable=False),
    sa.Column('owner_id', sa.String(length=36), nullable=True),
    sa.Column('access_pattern', sa.String(length=20), nullable=False),
    sa.Column('retention_until', sa.DateTime(), nullable=True),
    sa.Column('archive_after', sa.DateTime(), nullable=True),
    sa.Column('archived_at', sa.DateTime(), nullable=True),
    sa.Column('purged_at', sa.DateTime(), nullable=True),
    sa.Column('classification_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_accessed_at', sa.DateTime(), nullable=True),
    sa.Column('access_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_api_keys_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_api_keys')),
    sa.UniqueConstraint('user_id', 'name', name='uq_apikey_user_name')
    )
    op.create_index('idx_apikey_expires', 'api_keys', ['expires_at'], unique=False)
    op.create_index('idx_apikey_user_active', 'api_keys', ['user_id', 'is_active'], unique=False)
    op.create_index(op.f('ix_api_keys_archive_after'), 'api_keys', ['archive_after'], unique=False)
    op.create_index(op.f('ix_api_keys_created_at'), 'api_keys', ['created_at'], unique=False)
    op.create_index(op.f('ix_api_keys_data_classification'), 'api_keys', ['data_classification'], unique=False)
    op.create_index(op.f('ix_api_keys_expires_at'), 'api_keys', ['expires_at'], unique=False)
    op.create_index(op.f('ix_api_keys_key_hash'), 'api_keys', ['key_hash'], unique=True)
    op.create_index(op.f('ix_api_keys_owner_id'), 'api_keys', ['owner_id'], unique=False)
    op.create_index(op.f('ix_api_keys_retention_until'), 'api_keys', ['retention_until'], unique=False)
    op.create_index(op.f('ix_api_keys_sensitivity_level'), 'api_keys', ['sensitivity_level'], unique=False)
    op.create_index(op.f('ix_api_keys_user_id'), 'api_keys', ['user_id'], unique=False)
    op.create_table('projects',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('owner_id', sa.String(length=36), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('tags', sa.JSON(), nullable=False),
    sa.Column('settings', sa.JSON(), nullable=False),
    sa.Column('data_classification', sa.String(length=50), nullable=False),
    sa.Column('sensitivity_level', sa.Integer(), nullable=False),
    sa.Column('encryption_required', sa.String(length=20), nullable=False),
    sa.Column('access_pattern', sa.String(length=20), nullable=False),
    sa.Column('retention_until', sa.DateTime(), nullable=True),
    sa.Column('archive_after', sa.DateTime(), nullable=True),
    sa.Column('archived_at', sa.DateTime(), nullable=True),
    sa.Column('purged_at', sa.DateTime(), nullable=True),
    sa.Column('classification_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_accessed_at', sa.DateTime(), nullable=True),
    sa.Column('access_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name=op.f('fk_projects_owner_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_projects')),
    sa.UniqueConstraint('owner_id', 'name', name='uq_project_owner_name')
    )
    op.create_index('idx_project_owner_name', 'projects', ['owner_id', 'name'], unique=False)
    op.create_index('idx_project_public', 'projects', ['is_public'], unique=False)
    op.create_index(op.f('ix_projects_archive_after'), 'projects', ['archive_after'], unique=False)
    op.create_index(op.f('ix_projects_created_at'), 'projects', ['created_at'], unique=False)
    op.create_index(op.f('ix_projects_data_classification'), 'projects', ['data_classification'], unique=False)
    op.create_index(op.f('ix_projects_name'), 'projects', ['name'], unique=False)
    op.create_index(op.f('ix_projects_owner_id'), 'projects', ['owner_id'], unique=False)
    op.create_index(op.f('ix_projects_retention_until'), 'projects', ['retention_until'], unique=False)
    op.create_index(op.f('ix_projects_sensitivity_level'), 'projects', ['sensitivity_level'], unique=False)
    op.create_table('user_auth_tokens',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('token_type', sa.String(length=20), nullable=False),
    sa.Column('token_hash', sa.String(length=255), nullable=False),
    sa.Column('scopes', sa.JSON(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('revoked_at', sa.DateTime(), nullable=True),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('client_info', sa.JSON(), nullable=True),
    sa.Column('data_classification', sa.String(length=50), nullable=False),
    sa.Column('sensitivity_level', sa.Integer(), nullable=False),
    sa.Column('encryption_required', sa.String(length=20), nullable=False),
    sa.Column('owner_id', sa.String(length=36), nullable=True),
    sa.Column('access_pattern', sa.String(length=20), nullable=False),
    sa.Column('retention_until', sa.DateTime(), nullable=True),
    sa.Column('archive_after', sa.DateTime(), nullable=True),
    sa.Column('archived_at', sa.DateTime(), nullable=True),
    sa.Column('purged_at', sa.DateTime(), nullable=True),
    sa.Column('classification_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_accessed_at', sa.DateTime(), nullable=True),
    sa.Column('access_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_auth_tokens_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_auth_tokens'))
    )
    op.create_index('idx_token_active', 'user_auth_tokens', ['revoked_at', 'expires_at'], unique=False)
    op.create_index('idx_token_expires', 'user_auth_tokens', ['expires_at'], unique=False)
    op.create_index('idx_token_user_type', 'user_auth_tokens', ['user_id', 'token_type'], unique=False)
    op.create_index(op.f('ix_user_auth_tokens_archive_after'), 'user_auth_tokens', ['archive_after'], unique=False)
    op.create_index(op.f('ix_user_auth_tokens_created_at'), 'user_auth_tokens', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_auth_tokens_data_classification'), 'user_auth_tokens', ['data_classification'], unique=False)
    op.create_index(op.f('ix_user_auth_tokens_expires_at'), 'user_auth_tokens', ['expires_at'], unique=False)
    op.create_index(op.f('ix_user_auth_tokens_owner_id'), 'user_auth_tokens', ['owner_id'], unique=False)
    op.create_index(op.f('ix_user_auth_tokens_retention_until'), 'user_auth_tokens', ['retention_until'], unique=False)
    op.create_index(op.f('ix_user_auth_tokens_sensitivity_level'), 'user_auth_tokens', ['sensitivity_level'], unique=False)
    op.create_index(op.f('ix_user_auth_tokens_token_hash'), 'user_auth_tokens', ['token_hash'], unique=True)
    op.create_index(op.f('ix_user_auth_tokens_user_id'), 'user_auth_tokens', ['user_id'], unique=False)
    op.create_table('assets',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('project_id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('asset_type', sa.String(length=50), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('mime_type', sa.String(length=100), nullable=True),
    sa.Column('checksum', sa.String(length=64), nullable=True),
    sa.Column('generation_params', sa.JSON(), nullable=True),
    sa.Column('asset_metadata', sa.JSON(), nullable=False),
    sa.Column('data_classification', sa.String(length=50), nullable=False),
    sa.Column('sensitivity_level', sa.Integer(), nullable=False),
    sa.Column('encryption_required', sa.String(length=20), nullable=False),
    sa.Column('owner_id', sa.String(length=36), nullable=True),
    sa.Column('access_pattern', sa.String(length=20), nullable=False),
    sa.Column('retention_until', sa.DateTime(), nullable=True),
    sa.Column('archive_after', sa.DateTime(), nullable=True),
    sa.Column('archived_at', sa.DateTime(), nullable=True),
    sa.Column('purged_at', sa.DateTime(), nullable=True),
    sa.Column('classification_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_accessed_at', sa.DateTime(), nullable=True),
    sa.Column('access_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name=op.f('fk_assets_project_id_projects')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_assets'))
    )
    op.create_index('idx_asset_checksum', 'assets', ['checksum'], unique=False)
    op.create_index('idx_asset_created', 'assets', ['created_at'], unique=False)
    op.create_index('idx_asset_project_type', 'assets', ['project_id', 'asset_type'], unique=False)
    op.create_index(op.f('ix_assets_archive_after'), 'assets', ['archive_after'], unique=False)
    op.create_index(op.f('ix_assets_asset_type'), 'assets', ['asset_type'], unique=False)
    op.create_index(op.f('ix_assets_created_at'), 'assets', ['created_at'], unique=False)
    op.create_index(op.f('ix_assets_data_classification'), 'assets', ['data_classification'], unique=False)
    op.create_index(op.f('ix_assets_owner_id'), 'assets', ['owner_id'], unique=False)
    op.create_index(op.f('ix_assets_project_id'), 'assets', ['project_id'], unique=False)
    op.create_index(op.f('ix_assets_retention_until'), 'assets', ['retention_until'], unique=False)
    op.create_index(op.f('ix_assets_sensitivity_level'), 'assets', ['sensitivity_level'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_assets_sensitivity_level'), table_name='assets')
    op.drop_index(op.f('ix_assets_retention_until'), table_name='assets')
    op.drop_index(op.f('ix_assets_project_id'), table_name='assets')
    op.drop_index(op.f('ix_assets_owner_id'), table_name='assets')
    op.drop_index(op.f('ix_assets_data_classification'), table_name='assets')
    op.drop_index(op.f('ix_assets_created_at'), table_name='assets')
    op.drop_index(op.f('ix_assets_asset_type'), table_name='assets')
    op.drop_index(op.f('ix_assets_archive_after'), table_name='assets')
    op.drop_index('idx_asset_project_type', table_name='assets')
    op.drop_index('idx_asset_created', table_name='assets')
    op.drop_index('idx_asset_checksum', table_name='assets')
    op.drop_table('assets')
    op.drop_index(op.f('ix_user_auth_tokens_user_id'), table_name='user_auth_tokens')
    op.drop_index(op.f('ix_user_auth_tokens_token_hash'), table_name='user_auth_tokens')
    op.drop_index(op.f('ix_user_auth_tokens_sensitivity_level'), table_name='user_auth_tokens')
    op.drop_index(op.f('ix_user_auth_tokens_retention_until'), table_name='user_auth_tokens')
    op.drop_index(op.f('ix_user_auth_tokens_owner_id'), table_name='user_auth_tokens')
    op.drop_index(op.f('ix_user_auth_tokens_expires_at'), table_name='user_auth_tokens')
    op.drop_index(op.f('ix_user_auth_tokens_data_classification'), table_name='user_auth_tokens')
    op.drop_index(op.f('ix_user_auth_tokens_created_at'), table_name='user_auth_tokens')
    op.drop_index(op.f('ix_user_auth_tokens_archive_after'), table_name='user_auth_tokens')
    op.drop_index('idx_token_user_type', table_name='user_auth_tokens')
    op.drop_index('idx_token_expires', table_name='user_auth_tokens')
    op.drop_index('idx_token_active', table_name='user_auth_tokens')
    op.drop_table('user_auth_tokens')
    op.drop_index(op.f('ix_projects_sensitivity_level'), table_name='projects')
    op.drop_index(op.f('ix_projects_retention_until'), table_name='projects')
    op.drop_index(op.f('ix_projects_owner_id'), table_name='projects')
    op.drop_index(op.f('ix_projects_name'), table_name='projects')
    op.drop_index(op.f('ix_projects_data_classification'), table_name='projects')
    op.drop_index(op.f('ix_projects_created_at'), table_name='projects')
    op.drop_index(op.f('ix_projects_archive_after'), table_name='projects')
    op.drop_index('idx_project_public', table_name='projects')
    op.drop_index('idx_project_owner_name', table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_api_keys_user_id'), table_name='api_keys')
    op.drop_index(op.f('ix_api_keys_sensitivity_level'), table_name='api_keys')
    op.drop_index(op.f('ix_api_keys_retention_until'), table_name='api_keys')
    op.drop_index(op.f('ix_api_keys_owner_id'), table_name='api_keys')
    op.drop_index(op.f('ix_api_keys_key_hash'), table_name='api_keys')
    op.drop_index(op.f('ix_api_keys_expires_at'), table_name='api_keys')
    op.drop_index(op.f('ix_api_keys_data_classification'), table_name='api_keys')
    op.drop_index(op.f('ix_api_keys_created_at'), table_name='api_keys')
    op.drop_index(op.f('ix_api_keys_archive_after'), table_name='api_keys')
    op.drop_index('idx_apikey_user_active', table_name='api_keys')
    op.drop_index('idx_apikey_expires', table_name='api_keys')
    op.drop_table('api_keys')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_index(op.f('ix_users_sensitivity_level'), table_name='users')
    op.drop_index(op.f('ix_users_retention_until'), table_name='users')
    op.drop_index(op.f('ix_users_owner_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_data_classification'), table_name='users')
    op.drop_index(op.f('ix_users_created_at'), table_name='users')
    op.drop_index(op.f('ix_users_archive_after'), table_name='users')
    op.drop_index('idx_user_username_active', table_name='users')
    op.drop_index('idx_user_provider', table_name='users')
    op.drop_index('idx_user_email_active', table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_usage_metrics_user_id'), table_name='usage_metrics')
    op.drop_index(op.f('ix_usage_metrics_sensitivity_level'), table_name='usage_metrics')
    op.drop_index(op.f('ix_usage_metrics_retention_until'), table_name='usage_metrics')
    op.drop_index(op.f('ix_usage_metrics_resource_type'), table_name='usage_metrics')
    op.drop_index(op.f('ix_usage_metrics_period_start'), table_name='usage_metrics')
    op.drop_index(op.f('ix_usage_metrics_period_end'), table_name='usage_metrics')
    op.drop_index(op.f('ix_usage_metrics_owner_id'), table_name='usage_metrics')
    op.drop_index(op.f('ix_usage_metrics_metric_type'), table_name='usage_metrics')
    op.drop_index(op.f('ix_usage_metrics_data_classification'), table_name='usage_metrics')
    op.drop_index(op.f('ix_usage_metrics_created_at'), table_name='usage_metrics')
    op.drop_index(op.f('ix_usage_metrics_archive_after'), table_name='usage_metrics')
    op.drop_index('idx_metrics_user_type', table_name='usage_metrics')
    op.drop_index('idx_metrics_type_period', table_name='usage_metrics')
    op.drop_index('idx_metrics_resource', table_name='usage_metrics')
    op.drop_index('idx_metrics_aggregation', table_name='usage_metrics')
    op.drop_table('usage_metrics')
    op.drop_index(op.f('ix_audit_logs_user_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_severity'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_sensitivity_level'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_retention_until'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_result'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_resource_type'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_resource_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_owner_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_ip_address'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_event_type'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_data_classification'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_created_at'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_archive_after'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_action'), table_name='audit_logs')
    op.drop_index('idx_audit_user_action', table_name='audit_logs')
    op.drop_index('idx_audit_time_severity', table_name='audit_logs')
    op.drop_index('idx_audit_resource', table_name='audit_logs')
    op.drop_index('idx_audit_ip', table_name='audit_logs')
    op.drop_index('idx_audit_event_type', table_name='audit_logs')
    op.drop_table('audit_logs')
    # ### end Alembic commands ###
