"""Add missing collaboration tables

Revision ID: 4d9691edf265
Revises: f39698bb983c
Create Date: 2025-09-17 02:39:06.283573

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4d9691edf265'
down_revision = 'f39698bb983c'
branch_labels = None
depends_on = None


def upgrade() -> None:
    """Upgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notifications',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('INVITATION_RECEIVED', 'INVITATION_ACCEPTED', 'PROJECT_SHARED', 'ASSET_SHARED', 'COMMENT_RECEIVED', 'MENTION_RECEIVED', 'AI_JOB_COMPLETED', 'AI_JOB_FAILED', name='notificationtype'), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('entity_type', sa.String(length=50), nullable=True),
    sa.Column('entity_id', sa.String(), nullable=True),
    sa.Column('action_url', sa.String(length=500), nullable=True),
    sa.Column('action_text', sa.String(length=100), nullable=True),
    sa.Column('invite_metadata', sa.JSON(), nullable=True),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.Column('archived_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_notifications'))
    )
    op.create_index('idx_notifications_entity', 'notifications', ['entity_type', 'entity_id'], unique=False)
    op.create_index('idx_notifications_user_read', 'notifications', ['user_id', 'read_at'], unique=False)
    op.create_index('idx_notifications_user_type', 'notifications', ['user_id', 'type'], unique=False)
    op.create_index(op.f('ix_notifications_created_at'), 'notifications', ['created_at'], unique=False)
    op.create_index(op.f('ix_notifications_user_id'), 'notifications', ['user_id'], unique=False)
    op.create_table('activity_logs',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('project_id', sa.String(), nullable=True),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('activity_type', sa.Enum('PROJECT_CREATED', 'PROJECT_UPDATED', 'PROJECT_DELETED', 'PROJECT_SHARED', 'ASSET_CREATED', 'ASSET_UPDATED', 'ASSET_DELETED', 'ASSET_UPLOADED', 'ASSET_DOWNLOADED', 'AI_GENERATION_STARTED', 'AI_GENERATION_COMPLETED', 'AI_GENERATION_FAILED', 'AI_MODEL_USED', 'MEMBER_INVITED', 'MEMBER_JOINED', 'MEMBER_LEFT', 'MEMBER_ROLE_CHANGED', 'COMMENT_CREATED', 'COMMENT_UPDATED', 'COMMENT_DELETED', name='activitytype'), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('entity_type', sa.String(length=50), nullable=True),
    sa.Column('entity_id', sa.String(), nullable=True),
    sa.Column('activity_metadata', sa.JSON(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name=op.f('fk_activity_logs_project_id_projects')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_activity_logs'))
    )
    op.create_index('idx_activity_entity', 'activity_logs', ['entity_type', 'entity_id'], unique=False)
    op.create_index('idx_activity_project_type_date', 'activity_logs', ['project_id', 'activity_type', 'created_at'], unique=False)
    op.create_index('idx_activity_user_date', 'activity_logs', ['user_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_activity_logs_activity_type'), 'activity_logs', ['activity_type'], unique=False)
    op.create_index(op.f('ix_activity_logs_created_at'), 'activity_logs', ['created_at'], unique=False)
    op.create_index(op.f('ix_activity_logs_project_id'), 'activity_logs', ['project_id'], unique=False)
    op.create_index(op.f('ix_activity_logs_user_id'), 'activity_logs', ['user_id'], unique=False)
    op.create_table('comments',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('project_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('content_type', sa.String(length=20), nullable=True),
    sa.Column('parent_id', sa.String(), nullable=True),
    sa.Column('thread_root_id', sa.String(), nullable=True),
    sa.Column('reply_count', sa.Integer(), nullable=True),
    sa.Column('entity_type', sa.String(length=50), nullable=True),
    sa.Column('entity_id', sa.String(), nullable=True),
    sa.Column('mentions', sa.JSON(), nullable=True),
    sa.Column('comment_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['comments.id'], name=op.f('fk_comments_parent_id_comments')),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name=op.f('fk_comments_project_id_projects')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_comments'))
    )
    op.create_index('idx_comments_project_entity', 'comments', ['project_id', 'entity_type', 'entity_id'], unique=False)
    op.create_index('idx_comments_thread', 'comments', ['thread_root_id', 'created_at'], unique=False)
    op.create_index('idx_comments_user_date', 'comments', ['user_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_comments_created_at'), 'comments', ['created_at'], unique=False)
    op.create_table('project_collaborations',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('project_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('OWNER', 'ADMIN', 'EDITOR', 'VIEWER', 'GUEST', name='collaborationrole'), nullable=False),
    sa.Column('permissions', sa.JSON(), nullable=True),
    sa.Column('invited_by', sa.String(), nullable=False),
    sa.Column('joined_at', sa.DateTime(), nullable=True),
    sa.Column('last_accessed_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name=op.f('fk_project_collaborations_project_id_projects')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_project_collaborations')),
    sa.UniqueConstraint('project_id', 'user_id', name='uq_project_user_collaboration')
    )
    op.create_index('idx_collaborations_project_active', 'project_collaborations', ['project_id', 'deleted_at'], unique=False)
    op.create_index('idx_collaborations_user_role', 'project_collaborations', ['user_id', 'role'], unique=False)
    op.create_table('project_invites',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('project_id', sa.String(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('OWNER', 'ADMIN', 'EDITOR', 'VIEWER', 'GUEST', name='collaborationrole'), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('token', sa.String(length=64), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'ACCEPTED', 'DECLINED', 'EXPIRED', 'REVOKED', name='invitestatus'), nullable=True),
    sa.Column('invited_by', sa.String(), nullable=False),
    sa.Column('accepted_by', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('responded_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name=op.f('fk_project_invites_project_id_projects')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_project_invites')),
    sa.UniqueConstraint('token', name=op.f('uq_project_invites_token'))
    )
    op.create_index('idx_invites_email_status', 'project_invites', ['email', 'status'], unique=False)
    op.create_index('idx_invites_project_status', 'project_invites', ['project_id', 'status'], unique=False)
    op.create_index('idx_invites_token', 'project_invites', ['token'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_invites_token', table_name='project_invites')
    op.drop_index('idx_invites_project_status', table_name='project_invites')
    op.drop_index('idx_invites_email_status', table_name='project_invites')
    op.drop_table('project_invites')
    op.drop_index('idx_collaborations_user_role', table_name='project_collaborations')
    op.drop_index('idx_collaborations_project_active', table_name='project_collaborations')
    op.drop_table('project_collaborations')
    op.drop_index(op.f('ix_comments_created_at'), table_name='comments')
    op.drop_index('idx_comments_user_date', table_name='comments')
    op.drop_index('idx_comments_thread', table_name='comments')
    op.drop_index('idx_comments_project_entity', table_name='comments')
    op.drop_table('comments')
    op.drop_index(op.f('ix_activity_logs_user_id'), table_name='activity_logs')
    op.drop_index(op.f('ix_activity_logs_project_id'), table_name='activity_logs')
    op.drop_index(op.f('ix_activity_logs_created_at'), table_name='activity_logs')
    op.drop_index(op.f('ix_activity_logs_activity_type'), table_name='activity_logs')
    op.drop_index('idx_activity_user_date', table_name='activity_logs')
    op.drop_index('idx_activity_project_type_date', table_name='activity_logs')
    op.drop_index('idx_activity_entity', table_name='activity_logs')
    op.drop_table('activity_logs')
    op.drop_index(op.f('ix_notifications_user_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_created_at'), table_name='notifications')
    op.drop_index('idx_notifications_user_type', table_name='notifications')
    op.drop_index('idx_notifications_user_read', table_name='notifications')
    op.drop_index('idx_notifications_entity', table_name='notifications')
    op.drop_table('notifications')
    # ### end Alembic commands ###
