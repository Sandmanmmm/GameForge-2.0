apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: backend
    app.kubernetes.io/component: api
    app.kubernetes.io/name: backend
  name: backend
  namespace: gameforge-prod
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - env:
        - name: FLASK_ENV
          value: production
        - name: DATABASE_URL
          value: postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/gameforge
        - name: REDIS_URL
          value: redis://redis:6379/0
        image: ${registry}/backend-hardened
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 30
        name: backend
        ports:
        - containerPort: 8000
          name: http
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 30
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 200m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /app/logs
          name: logs
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      volumes:
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: logs
