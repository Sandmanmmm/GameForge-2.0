# GameForge AI System - RTX 4090 Production Docker Compose
# Phase 0: Foundation Multi-Service Container Orchestration
# Optimized for RTX 4090 with CPU fallback support

services:
  # Redis for queue management and caching
  redis:
    image: redis:7.2-alpine
    container_name: gameforge-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 1gb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - gameforge-network

  # GameForge AI Service (RTX 4090 optimized)
  gameforge-ai:
    build:
      context: .
      dockerfile: gameforge-ai-rtx4090.Dockerfile
    container_name: gameforge-ai-rtx4090
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CUDA_VISIBLE_DEVICES=0
      - NVIDIA_VISIBLE_DEVICES=all
      - PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:512
      - GAMEFORGE_ENV=production
      - LOG_LEVEL=info
      - GPU_MODE=rtx4090
      - TORCH_CUDA_ARCH_LIST=8.9
    volumes:
      - ./generated_assets:/app/generated_assets
      - ./logs:/app/logs
      - model_cache:/app/models_cache
      - ./config:/app/config:ro
    depends_on:
      redis:
        condition: service_healthy
    # GPU support with fallback
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
        limits:
          memory: 16G
    networks:
      - gameforge-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s

  # Background Worker for asset processing (RTX 4090)
  gameforge-worker:
    build:
      context: .
      dockerfile: gameforge-ai-rtx4090.Dockerfile
    container_name: gameforge-worker-rtx4090
    restart: unless-stopped
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CUDA_VISIBLE_DEVICES=0
      - NVIDIA_VISIBLE_DEVICES=all
      - WORKER_MODE=true
      - GAMEFORGE_ENV=production
      - GPU_MODE=rtx4090
    volumes:
      - ./generated_assets:/app/generated_assets
      - ./logs:/app/logs
      - model_cache:/app/models_cache
      - ./config:/app/config:ro
    depends_on:
      - redis
      - gameforge-ai
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
        limits:
          memory: 8G
    networks:
      - gameforge-network
    command: ["python", "-m", "celery", "worker", "-A", "gameforge_server.celery_app", "--loglevel=info", "--concurrency=2"]

  # Load Balancer (nginx) with RTX 4090 optimizations
  nginx:
    image: nginx:1.25-alpine
    container_name: gameforge-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.production.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./static:/var/www/static:ro
    depends_on:
      - gameforge-ai
    networks:
      - gameforge-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:v2.47.2
    container_name: gameforge-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - gameforge-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:10.2.0
    container_name: gameforge-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=gameforge123
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    networks:
      - gameforge-network

  # GPU Metrics Exporter for RTX 4090
  gpu-exporter:
    image: mindprince/nvidia_gpu_prometheus_exporter:0.1
    container_name: gameforge-gpu-exporter
    restart: unless-stopped
    ports:
      - "9445:9445"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    networks:
      - gameforge-network

volumes:
  redis_data:
  model_cache:
  prometheus_data:
  grafana_data:

networks:
  gameforge-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
