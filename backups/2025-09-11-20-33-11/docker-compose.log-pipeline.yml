version: '3.8'

services:
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.0
    container_name: gameforge-filebeat
    restart: unless-stopped
    user: root
    command: [
      "--strict.perms=false",
      "-e",
      "-E", "output.elasticsearch.username=filebeat_system",
      "-E", "output.elasticsearch.password=${FILEBEAT_SYSTEM_PASSWORD}"
    ]
    volumes:
      - ./monitoring/logging/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - filebeat_data:/usr/share/filebeat/data
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
    environment:
      - FILEBEAT_SYSTEM_PASSWORD=${FILEBEAT_SYSTEM_PASSWORD}
      - NODE_NAME=${HOSTNAME}
    networks:
      - gameforge-logging
    depends_on:
      - logstash
    labels:
      - "co.elastic.logs/enabled=false"

  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0
    container_name: gameforge-logstash
    restart: unless-stopped
    ports:
      - "5044:5044"  # Beats input
      - "8080:8080"  # HTTP input
      - "5140:5140"  # Syslog input
    volumes:
      - ./monitoring/logging/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
      - ./monitoring/logging/logstash/templates:/usr/share/logstash/templates:ro
      - ./monitoring/logging/logstash/patterns:/usr/share/logstash/patterns:ro
      - logstash_data:/usr/share/logstash/data
    environment:
      - "LS_JAVA_OPTS=-Xmx2g -Xms2g"
      - LOGSTASH_SYSTEM_PASSWORD=${LOGSTASH_SYSTEM_PASSWORD}
      - xpack.monitoring.enabled=true
      - xpack.monitoring.elasticsearch.hosts=["elasticsearch:9200"]
      - xpack.monitoring.elasticsearch.username=logstash_system
      - xpack.monitoring.elasticsearch.password=${LOGSTASH_SYSTEM_PASSWORD}
    networks:
      - gameforge-logging
    depends_on:
      - elasticsearch
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9600/_node/stats"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: gameforge-elasticsearch-logs
    restart: unless-stopped
    ports:
      - "9202:9200"
      - "9302:9300"
    environment:
      - node.name=gameforge-es-logs
      - cluster.name=gameforge-logging
      - cluster.initial_master_nodes=gameforge-es-logs
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - xpack.license.self_generated.type=basic
      - xpack.monitoring.collection.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch_logs_data:/usr/share/elasticsearch/data
      - ./monitoring/logging/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    networks:
      - gameforge-logging
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: gameforge-kibana-logs
    restart: unless-stopped
    ports:
      - "5603:5601"
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_SYSTEM_PASSWORD}
      - xpack.security.enabled=true
      - xpack.encryptedSavedObjects.encryptionKey=${KIBANA_ENCRYPTION_KEY}
    volumes:
      - kibana_logs_data:/usr/share/kibana/data
      - ./monitoring/logging/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    networks:
      - gameforge-logging
    depends_on:
      - elasticsearch
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5601/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # ML Processing Service
  ml-processor:
    build:
      context: ./monitoring/logging/ml-processing
      dockerfile: Dockerfile
    container_name: gameforge-ml-processor
    restart: unless-stopped
    environment:
      - ELASTICSEARCH_HOST=elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
      - ML_MODEL_PATH=/app/models
      - PROCESSING_INTERVAL=300
    volumes:
      - ./monitoring/logging/ml-processing/models:/app/models:ro
      - ml_processor_data:/app/data
    networks:
      - gameforge-logging
    depends_on:
      - elasticsearch

  # Log Rotation Service
  log-rotator:
    image: alpine:3.18
    container_name: gameforge-log-rotator
    restart: unless-stopped
    command: /bin/sh -c "while true; do find /logs -name '*.log' -mtime +7 -delete; sleep 86400; done"
    volumes:
      - /var/log:/logs
    networks:
      - gameforge-logging

networks:
  gameforge-logging:
    external: true
    name: gameforge-network

volumes:
  filebeat_data:
    driver: local
  logstash_data:
    driver: local
  elasticsearch_logs_data:
    driver: local
  kibana_logs_data:
    driver: local
  ml_processor_data:
    driver: local
