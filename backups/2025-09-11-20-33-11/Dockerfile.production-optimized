# GameForge Production-Optimized Dockerfile
# ========================================================================
# Lightweight production build using pre-built base images
# ========================================================================

# Use existing PyTorch image as-is (already 33.5GB locally)
FROM nvcr.io/nvidia/pytorch:23.12-py3 AS production-base

# Minimal system setup only
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV CUDA_HOME=/usr/local/cuda

# Install only essential system packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    wget \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# ========================================================================
# Stage 2: Minimal Python Dependencies
# ========================================================================
FROM production-base AS app-deps

# Install ONLY core dependencies needed for GameForge
COPY requirements-production.txt /tmp/
RUN pip install --no-cache-dir -r /tmp/requirements-production.txt

# ========================================================================
# Stage 3: Application Layer
# ========================================================================
FROM app-deps AS gameforge-app

# Create app user
RUN useradd -m -u 1001 gameforge
WORKDIR /app

# Copy only application code (models excluded via .dockerignore)
COPY --chown=gameforge:gameforge . /app/

# Set permissions
USER 1001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Default command
CMD ["python", "gpu_server_production.py"]
