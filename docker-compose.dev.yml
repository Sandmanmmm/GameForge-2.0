# GameForge Development Stack
# Simplified development environment with minimal security for easier debugging
version: '3.8'

# Development Environment Variables
x-common-env: &common-env
  GAMEFORGE_ENV: development
  LOG_LEVEL: debug
  TZ: UTC
  PYTHONPATH: /app
  DEBUG: "true"

# Basic logging for development
x-dev-logging: &dev-logging
  driver: "json-file"
  options:
    max-size: "50m"
    max-file: "2"

services:
  # GameForge Application (Development)
  gameforge-app:
    build:
      context: .
      dockerfile: docker/base/Dockerfile.production
      target: development
      args:
        BUILD_ENV: development
        ENABLE_GPU: "false"
        SECURITY_HARDENING: "false"
    container_name: gameforge-app-dev
    restart: unless-stopped
    environment:
      <<: *common-env
      DATABASE_URL: ${DATABASE_URL:-postgresql://gameforge:${POSTGRES_PASSWORD:-devpassword}@postgres:5432/gameforge_dev}
      REDIS_URL: redis://redis:6379/0
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-dev-secret-key}
      SECRET_KEY: ${SECRET_KEY:-dev-secret-key}
      WORKERS: 1
      MAX_WORKERS: 2
    volumes:
      - ./src:/app/src:rw
      - ./scripts:/app/scripts:ro
      - gameforge-logs:/app/logs:rw
      - gameforge-cache:/app/cache:rw
    networks:
      - frontend
      - backend
    ports:
      - "3000:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging: *dev-logging

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: gameforge-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: gameforge_dev
      POSTGRES_USER: gameforge
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-devpassword}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gameforge"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging: *dev-logging

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: gameforge-redis-dev
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - backend
    ports:
      - "127.0.0.1:6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging: *dev-logging

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
    internal: true

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  gameforge-logs:
    driver: local
  gameforge-cache:
    driver: local