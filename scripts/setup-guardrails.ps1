# GameForge Guardrails Setup
# This script installs the pre-commit hook to automatically check for violations

Write-Host "üõ°Ô∏è Setting up GameForge Production Guardrails..." -ForegroundColor Cyan

# Check if we're in a Git repository
if (-not (Test-Path ".git")) {
    Write-Host "‚ùå Not in a Git repository root!" -ForegroundColor Red
    Write-Host "üí° Run this script from the repository root directory" -ForegroundColor Yellow
    exit 1
}

# Create hooks directory if it doesn't exist
$hooksDir = ".git\hooks"
if (-not (Test-Path $hooksDir)) {
    New-Item -ItemType Directory -Path $hooksDir -Force | Out-Null
}

# Create the pre-commit hook
$preCommitHook = @"
#!/bin/sh
# GameForge Production Guardrails Pre-commit Hook
# Auto-generated by setup-guardrails.ps1

echo "üõ°Ô∏è Running GameForge Production Guardrails..."

# Try PowerShell first (Windows), then bash (Linux/Mac)
if command -v powershell >/dev/null 2>&1; then
    powershell -ExecutionPolicy Bypass -File "./scripts/guardrails-check.ps1"
elif command -v pwsh >/dev/null 2>&1; then
    pwsh -File "./scripts/guardrails-check.ps1"
else
    # Fallback to bash version
    chmod +x "./scripts/guardrails-check.sh"
    "./scripts/guardrails-check.sh"
fi
"@

$preCommitPath = "$hooksDir\pre-commit"

# Write the hook
Set-Content -Path $preCommitPath -Value $preCommitHook -Encoding UTF8

# Make executable (on Windows, this is less critical)
if (Get-Command "chmod" -ErrorAction SilentlyContinue) {
    chmod +x $preCommitPath
}

Write-Host "‚úÖ Pre-commit hook installed successfully!" -ForegroundColor Green
Write-Host ""
Write-Host "üéØ What happens now:" -ForegroundColor White
Write-Host "  ‚Ä¢ Every commit will be automatically checked" -ForegroundColor White
Write-Host "  ‚Ä¢ Violations will block the commit" -ForegroundColor White
Write-Host "  ‚Ä¢ Clean commits will proceed normally" -ForegroundColor White
Write-Host ""
Write-Host "üîß Manual check:" -ForegroundColor Yellow
Write-Host "  .\scripts\guardrails-check.ps1" -ForegroundColor Cyan
Write-Host ""
Write-Host "üõ†Ô∏è  Auto-fix mode:" -ForegroundColor Yellow
Write-Host "  .\scripts\guardrails-check.ps1 -FixMode" -ForegroundColor Cyan
Write-Host ""
Write-Host "‚ö†Ô∏è  To bypass (emergency only):" -ForegroundColor Yellow
Write-Host "  git commit --no-verify" -ForegroundColor Red
Write-Host ""
Write-Host "üöÄ Your repository is now protected by production guardrails!" -ForegroundColor Green