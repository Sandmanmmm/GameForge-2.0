version: '3.8'
services:
  frontend:
    image: gcr.io/distroless/nodejs18-debian11
    container_name: gameforge_frontend
    restart: unless-stopped
    networks:
    - gameforge
    ports:
    - 3000:3000
    healthcheck:
      test: curl -f http://localhost:3000/health || exit 1
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '500'
          memory: 512Mi
        reservations:
          cpus: '100'
          memory: 128Mi
      replicas: 3
  backend:
    image: gcr.io/distroless/python3-debian11
    container_name: gameforge_backend
    restart: unless-stopped
    networks:
    - gameforge
    ports:
    - 8000:8000
    - 9090:9090
    environment:
    - name: DATABASE_URL
      value_from_secret: postgres-credentials
    - name: REDIS_URL
      value: redis://redis:6379
    healthcheck:
      test: curl -f http://localhost:8000/api/health || exit 1
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '1000'
          memory: 1Gi
        reservations:
          cpus: '200'
          memory: 256Mi
      replicas: 3
  ai-inference:
    image: nvidia/cuda:12.1-runtime-alpine
    container_name: gameforge_ai-inference
    restart: unless-stopped
    networks:
    - gameforge
    ports:
    - 50051:50051
    - 8001:8001
    volumes:
    - ai-inference_models:/app/models
    healthcheck:
      test: curl -f http://localhost:8001/health || exit 1
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 120s
    deploy:
      resources:
        limits:
          cpus: '4000'
          memory: 16Gi
        reservations:
          cpus: '1000'
          memory: 4Gi
          devices:
          - driver: nvidia
            count: 1
            capabilities:
            - gpu
      replicas: 2
  postgres:
    image: postgres:15-alpine
    container_name: gameforge_postgres
    restart: unless-stopped
    networks:
    - gameforge
    ports:
    - 5432:5432
    environment:
    - name: POSTGRES_DB
      value: gameforge
    - name: POSTGRES_USER
      value_from_secret: postgres-credentials
    - name: POSTGRES_PASSWORD
      value_from_secret: postgres-credentials
    volumes:
    - postgres_data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: '2000'
          memory: 4Gi
        reservations:
          cpus: '500'
          memory: 1Gi
  redis:
    image: redis:7-alpine
    container_name: gameforge_redis
    restart: unless-stopped
    networks:
    - gameforge
    ports:
    - 6379:6379
    volumes:
    - redis_data:/data
    deploy:
      resources:
        limits:
          cpus: '500'
          memory: 512Mi
        reservations:
          cpus: '100'
          memory: 128Mi
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: gameforge_prometheus
    restart: unless-stopped
    networks:
    - gameforge
    ports:
    - 9090:9090
    volumes:
    - prometheus_data:/prometheus
    - ./config/prometheus:/etc/prometheus:ro
    healthcheck:
      test: curl -f http://localhost:9090/-/healthy || exit 1
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '1000'
          memory: 2Gi
        reservations:
          cpus: '200'
          memory: 512Mi
  grafana:
    image: grafana/grafana:10.1.0
    container_name: gameforge_grafana
    restart: unless-stopped
    networks:
    - gameforge
    ports:
    - 3000:3000
    environment:
    - name: GF_SECURITY_ADMIN_PASSWORD
      value_from_secret: grafana-credentials
    volumes:
    - grafana_data:/var/lib/grafana
    healthcheck:
      test: curl -f http://localhost:3000/api/health || exit 1
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '500'
          memory: 1Gi
        reservations:
          cpus: '100'
          memory: 256Mi
volumes:
  ai-inference_models:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
networks:
  gameforge:
    driver: bridge
